[
  
  
  {
    "title": "Event Types & Payloads",
    
    "url": "/api/activity/events/types/",
    "body": " Event Types &amp; Payloads Each event has a similar JSON schema, but a unique payload object that is determined by its event type. Event names are used by repository webhooks to specify which events the webhook should receive. The included payloads below are from webhook deliveries but match events returned by the Events API (except where noted). The Events API uses the CamelCased name (e.g. CommitCommentEvent) in the type field of an event object and does not include the repository or sender fields in the event payload object. Note: Some of these events may not be rendered in timelines, they're only created for various internal and webhook purposes.  CommitCommentEvent CreateEvent DeleteEvent DeploymentEvent DeploymentStatusEvent DownloadEvent FollowEvent ForkEvent ForkApplyEvent GistEvent GollumEvent IssueCommentEvent IssuesEvent MemberEvent MembershipEvent PageBuildEvent PublicEvent PullRequestEvent PullRequestReviewCommentEvent PushEvent ReleaseEvent RepositoryEvent StatusEvent TeamAddEvent WatchEvent   CommitCommentEvent Triggered when a commit comment is created.  Events API payload    Key Type Description     comment object The comment itself.     Webhook event name commit_comment  Webhook payload example { \"action\": \"created\", \"comment\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments/11056394\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/commit/9049f1265b7d61be4a8904a9a27120d2064dab3b#commitcomment-11056394\", \"id\": 11056394, \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"position\": null, \"line\": null, \"path\": null, \"commit_id\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"created_at\": \"2015-05-05T23:40:29Z\", \"updated_at\": \"2015-05-05T23:40:29Z\", \"body\": \"This is a really good change! :+1:\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   CreateEvent Represents a created repository, branch, or tag. Note: webhooks will not receive this event for created repositories.  Events API payload    Key Type Description     ref_type string The object that was created. Can be one of \"repository\", \"branch\", or \"tag\"   ref string The git ref (or null if only a repository was created).   master_branch string The name of the repository's default branch (usually master).   description string The repository's current description.     Webhook event name create  Webhook payload example { \"ref\": \"0.0.1\", \"ref_type\": \"tag\", \"master_branch\": \"master\", \"description\": \"\", \"pusher_type\": \"user\", \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:38Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   DeleteEvent Represents a deleted branch or tag.  Events API payload    Key Type Description     ref_type string The object that was deleted. Can be \"branch\" or \"tag\".   ref string The full git ref.     Webhook event name delete  Webhook payload example { \"ref\": \"simple-tag\", \"ref_type\": \"tag\", \"pusher_type\": \"user\", \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:40Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   DeploymentEvent Represents a deployment. Events of this type are not visible in timelines, they are only used to trigger hooks.  Events API payload    Key Type Description     deployment object The deployment.    deployment[\"sha\"] string The commit SHA for which this deployment was created.    deployment[\"payload\"] string The optional extra information for this deployment.    deployment[\"environment\"] string The optional environment to deploy to. Default: \"production\"     deployment[\"description\"] string The optional human-readable description added to the deployment.   repository object The repository for this deployment.     Webhook event name deployment  Webhook payload example { \"deployment\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692\", \"id\": 710692, \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"ref\": \"master\", \"task\": \"deploy\", \"payload\": { }, \"environment\": \"production\", \"description\": null, \"creator\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"created_at\": \"2015-05-05T23:40:38Z\", \"updated_at\": \"2015-05-05T23:40:38Z\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692/statuses\", \"repository_url\": \"https://api.github.com/repos/baxterthehacker/public-repo\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:38Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   DeploymentStatusEvent Represents a deployment status. Events of this type are not visible in timelines, they are only used to trigger hooks.  Events API payload    Key Type Description     deployment_status object The deployment status.   deployment_status[\"state\"] string The new state. Can be pending, success, failure, or error.   deployment_status[\"target_url\"] string The optional link added to the status.   deployment_status[\"description\"] string The optional human-readable description added to the status.   deployment object The deployment that this status is associated with.   repository object The repository for this deployment.     Webhook event name deployment_status  Webhook payload example { \"deployment\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692\", \"id\": 710692, \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"ref\": \"master\", \"task\": \"deploy\", \"payload\": { }, \"environment\": \"production\", \"description\": null, \"creator\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"created_at\": \"2015-05-05T23:40:38Z\", \"updated_at\": \"2015-05-05T23:40:38Z\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692/statuses\", \"repository_url\": \"https://api.github.com/repos/baxterthehacker/public-repo\" }, \"deployment_status\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692/statuses/1115122\", \"id\": 1115122, \"state\": \"success\", \"creator\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"description\": null, \"target_url\": null, \"created_at\": \"2015-05-05T23:40:39Z\", \"updated_at\": \"2015-05-05T23:40:39Z\", \"deployment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/deployments/710692\", \"repository_url\": \"https://api.github.com/repos/baxterthehacker/public-repo\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:38Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   DownloadEvent Triggered when a new download is created. Events of this type are no longer created, but it's possible that they exist in timelines of some users.  Events API payload    Key Type Description     download object The download that was just created.     Webhook event name download  FollowEvent Triggered when a user follows another user. Events of this type are no longer created, but it's possible that they exist in timelines of some users.  Events API payload    Key Type Description     target object The user that was just followed.     Webhook event name follow  ForkEvent Triggered when a user forks a repository.  Events API payload    Key Type Description     forkee object The created repository.     Webhook event name fork  Webhook payload example { \"forkee\": { \"id\": 35129393, \"name\": \"public-repo\", \"full_name\": \"baxterandthehackers/public-repo\", \"owner\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterandthehackers\", \"html_url\": \"https://github.com/baxterandthehackers\", \"followers_url\": \"https://api.github.com/users/baxterandthehackers/followers\", \"following_url\": \"https://api.github.com/users/baxterandthehackers/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterandthehackers/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterandthehackers/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterandthehackers/orgs\", \"repos_url\": \"https://api.github.com/users/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/users/baxterandthehackers/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterandthehackers/received_events\", \"type\": \"Organization\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterandthehackers/public-repo\", \"description\": \"\", \"fork\": true, \"url\": \"https://api.github.com/repos/baxterandthehackers/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:30Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterandthehackers/public-repo.git\", \"ssh_url\": \"git@github.com:baxterandthehackers/public-repo.git\", \"clone_url\": \"https://github.com/baxterandthehackers/public-repo.git\", \"svn_url\": \"https://github.com/baxterandthehackers/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": false, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\", \"public\": true }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 1, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 1, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterandthehackers\", \"html_url\": \"https://github.com/baxterandthehackers\", \"followers_url\": \"https://api.github.com/users/baxterandthehackers/followers\", \"following_url\": \"https://api.github.com/users/baxterandthehackers/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterandthehackers/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterandthehackers/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterandthehackers/orgs\", \"repos_url\": \"https://api.github.com/users/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/users/baxterandthehackers/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterandthehackers/received_events\", \"type\": \"Organization\", \"site_admin\": false } }   ForkApplyEvent Triggered when a patch is applied in the Fork Queue. Events of this type are no longer created, but it's possible that they exist in timelines of some users.  Events API payload    Key Type Description     head string The branch name the patch is applied to.   before string SHA of the repository state before the patch.   after string SHA of the repository state after the patch.     Webhook event name fork_apply  GistEvent Triggered when a Gist is created or updated. Events of this type are no longer created, but it's possible that they exist in timelines of some users.  Events API payload    Key Type Description     action string The action that was performed. Can be \"create\" or \"update\"   gist object The gist itself.     Webhook event name gist  GollumEvent Triggered when a Wiki page is created or updated.  Events API payload    Key Type Description     pages array The pages that were updated.   pages[][page_name] string The name of the page.   pages[][title] string The current page title.   pages[][action] string The action that was performed on the page. Can be \"created\" or \"edited\".   pages[][sha] string The latest commit SHA of the page.   pages[][html_url] string Points to the HTML wiki page.     Webhook event name gollum  Webhook payload example { \"pages\": [ { \"page_name\": \"Home\", \"title\": \"Home\", \"summary\": null, \"action\": \"created\", \"sha\": \"91ea1bd42aa2ba166b86e8aefe049e9837214e67\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/wiki/Home\" } ], \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:17Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"jasonrudolph\", \"id\": 2988, \"avatar_url\": \"https://avatars.githubusercontent.com/u/2988?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/jasonrudolph\", \"html_url\": \"https://github.com/jasonrudolph\", \"followers_url\": \"https://api.github.com/users/jasonrudolph/followers\", \"following_url\": \"https://api.github.com/users/jasonrudolph/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/jasonrudolph/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/jasonrudolph/subscriptions\", \"organizations_url\": \"https://api.github.com/users/jasonrudolph/orgs\", \"repos_url\": \"https://api.github.com/users/jasonrudolph/repos\", \"events_url\": \"https://api.github.com/users/jasonrudolph/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/jasonrudolph/received_events\", \"type\": \"User\", \"site_admin\": true } }   IssueCommentEvent Triggered when an issue comment is created on an issue or pull request.  Events API payload    Key Type Description     action string The action that was performed on the comment. Currently, can only be \"created\".   issue object The issue the comment belongs to.   comment object The comment itself.     Webhook event name issue_comment  Webhook payload example { \"action\": \"created\", \"issue\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/labels{/name}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/comments\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/events\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/issues/2\", \"id\": 73464126, \"number\": 2, \"title\": \"Spelling error in the README file\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"labels\": [ { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels/bug\", \"name\": \"bug\", \"color\": \"fc2929\" } ], \"state\": \"open\", \"locked\": false, \"assignee\": null, \"milestone\": null, \"comments\": 1, \"created_at\": \"2015-05-05T23:40:28Z\", \"updated_at\": \"2015-05-05T23:40:28Z\", \"closed_at\": null, \"body\": \"It looks like you accidently spelled 'commit' with two 't's.\" }, \"comment\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments/99262140\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/issues/2#issuecomment-99262140\", \"issue_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2\", \"id\": 99262140, \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"created_at\": \"2015-05-05T23:40:28Z\", \"updated_at\": \"2015-05-05T23:40:28Z\", \"body\": \"You are totally right! I'll get this fixed right away.\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   IssuesEvent Triggered when an issue is assigned, unassigned, labeled, unlabeled, opened, closed, or reopened.  Events API payload    Key Type Description     action string The action that was performed. Can be one of \"assigned\", \"unassigned\", \"labeled\", \"unlabeled\", \"opened\", \"closed\", or \"reopened\".   issue object The issue itself.   assignee object The optional user who was assigned or unassigned from the issue.   label object The optional label that was added or removed from the issue.     Webhook event name issues  Webhook payload example { \"action\": \"opened\", \"issue\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/labels{/name}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/comments\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/2/events\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/issues/2\", \"id\": 73464126, \"number\": 2, \"title\": \"Spelling error in the README file\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"labels\": [ { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels/bug\", \"name\": \"bug\", \"color\": \"fc2929\" } ], \"state\": \"open\", \"locked\": false, \"assignee\": null, \"milestone\": null, \"comments\": 0, \"created_at\": \"2015-05-05T23:40:28Z\", \"updated_at\": \"2015-05-05T23:40:28Z\", \"closed_at\": null, \"body\": \"It looks like you accidently spelled 'commit' with two 't's.\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   MemberEvent Triggered when a user is added as a collaborator to a repository.  Events API payload    Key Type Description     member object The user that was added.   action string The action that was performed. Currently, can only be \"added\".     Webhook event name member  Webhook payload example { \"action\": \"added\", \"member\": { \"login\": \"octocat\", \"id\": 583231, \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:40Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   MembershipEvent Triggered when a user is added or removed from a team. Events of this type are not visible in timelines, they are only used to trigger organization webhooks.  Events API payload    Key Type Description     action string The action that was performed. Can be \"added\" or \"removed\".   scope string The scope of the membership. Currently, can only be \"team\".   member object The user that was added or removed.   team object The team for the membership.     Webhook event name membership  Webhook payload example { \"action\": \"added\", \"scope\": \"team\", \"member\": { \"login\": \"kdaigle\", \"id\": 2501, \"avatar_url\": \"https://avatars.githubusercontent.com/u/2501?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/kdaigle\", \"html_url\": \"https://github.com/kdaigle\", \"followers_url\": \"https://api.github.com/users/kdaigle/followers\", \"following_url\": \"https://api.github.com/users/kdaigle/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/kdaigle/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/kdaigle/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/kdaigle/subscriptions\", \"organizations_url\": \"https://api.github.com/users/kdaigle/orgs\", \"repos_url\": \"https://api.github.com/users/kdaigle/repos\", \"events_url\": \"https://api.github.com/users/kdaigle/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/kdaigle/received_events\", \"type\": \"User\", \"site_admin\": true }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=2\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"team\": { \"name\": \"Contractors\", \"id\": 123456, \"slug\": \"contractors\", \"permission\": \"admin\", \"url\": \"https://api.github.com/teams/123456\", \"members_url\": \"https://api.github.com/teams/123456/members{/member}\", \"repositories_url\": \"https://api.github.com/teams/123456/repos\" }, \"organization\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"url\": \"https://api.github.com/orgs/baxterandthehackers\", \"repos_url\": \"https://api.github.com/orgs/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/orgs/baxterandthehackers/events\", \"members_url\": \"https://api.github.com/orgs/baxterandthehackers/members{/member}\", \"public_members_url\": \"https://api.github.com/orgs/baxterandthehackers/public_members{/member}\", \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=2\" } }   PageBuildEvent Represents an attempted build of a GitHub Pages site, whether successful or not. Triggered on push to a GitHub Pages enabled branch (gh-pages for project pages, master for user and organization pages). Events of this type are not visible in timelines, they are only used to trigger hooks.  Events API payload    Key Type Description     build object The page build itself.     Webhook event name page_build  Webhook payload example { \"id\": 15995382, \"build\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pages/builds/15995382\", \"status\": \"built\", \"error\": { \"message\": null }, \"pusher\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"commit\": \"053b99542c83021d6b202d1a1f5ecd5ef7084e55\", \"duration\": 3790, \"created_at\": \"2015-05-05T23:40:13Z\", \"updated_at\": \"2015-05-05T23:40:17Z\" }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:17Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   PublicEvent Triggered when a private repository is open sourced. Without a doubt: the best GitHub event.  Events API payload  Webhook event name public  Webhook payload example { \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:41Z\", \"pushed_at\": \"2015-05-05T23:40:40Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   PullRequestEvent Triggered when a pull request is assigned, unassigned, labeled, unlabeled, opened, closed, reopened, or synchronized.  Events API payload    Key Type Description     action string The action that was performed. Can be one of \"assigned\", \"unassigned\", \"labeled\", \"unlabeled\", \"opened\", \"closed\", or \"reopened\", or \"synchronize\". If the action is \"closed\" and the merged key is false, the pull request was closed with unmerged commits. If the action is \"closed\" and the merged key is true, the pull request was merged.   number integer The pull request number.   pull_request object The pull request itself.     Webhook event name pull_request  Webhook payload example { \"action\": \"opened\", \"number\": 1, \"pull_request\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\", \"id\": 34778301, \"html_url\": \"https://github.com/baxterthehacker/public-repo/pull/1\", \"diff_url\": \"https://github.com/baxterthehacker/public-repo/pull/1.diff\", \"patch_url\": \"https://github.com/baxterthehacker/public-repo/pull/1.patch\", \"issue_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1\", \"number\": 1, \"state\": \"open\", \"locked\": false, \"title\": \"Update the README with new information\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"body\": \"This is a pretty simple change that we need to pull into master.\", \"created_at\": \"2015-05-05T23:40:27Z\", \"updated_at\": \"2015-05-05T23:40:27Z\", \"closed_at\": null, \"merged_at\": null, \"merge_commit_sha\": null, \"assignee\": null, \"milestone\": null, \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits\", \"review_comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments\", \"review_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"head\": { \"label\": \"baxterthehacker:changes\", \"ref\": \"changes\", \"sha\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"repo\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:26Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" } }, \"base\": { \"label\": \"baxterthehacker:master\", \"ref\": \"master\", \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"repo\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:26Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" } }, \"_links\": { \"self\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\" }, \"html\": { \"href\": \"https://github.com/baxterthehacker/public-repo/pull/1\" }, \"issue\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1\" }, \"comments\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments\" }, \"review_comments\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments\" }, \"review_comment\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}\" }, \"commits\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits\" }, \"statuses\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\" } }, \"merged\": false, \"mergeable\": null, \"mergeable_state\": \"unknown\", \"merged_by\": null, \"comments\": 0, \"review_comments\": 0, \"commits\": 1, \"additions\": 1, \"deletions\": 1, \"changed_files\": 1 }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:26Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   PullRequestReviewCommentEvent Triggered when a comment is created on a portion of the unified diff of a pull request.  Events API payload    Key Type Description     action string The action that was performed on the comment. Currently, can only be \"created\".   pull_request object The pull request the comment belongs to.   comment object The comment itself.     Webhook event name pull_request_review_comment  Webhook payload example { \"action\": \"created\", \"comment\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments/29724692\", \"id\": 29724692, \"diff_hunk\": \"@@ -1 +1 @@\\n-# public-repo\", \"path\": \"README.md\", \"position\": 1, \"original_position\": 1, \"commit_id\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"original_commit_id\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"body\": \"Maybe you should use more emojji on this line.\", \"created_at\": \"2015-05-05T23:40:27Z\", \"updated_at\": \"2015-05-05T23:40:27Z\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/pull/1#discussion_r29724692\", \"pull_request_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\", \"_links\": { \"self\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments/29724692\" }, \"html\": { \"href\": \"https://github.com/baxterthehacker/public-repo/pull/1#discussion_r29724692\" }, \"pull_request\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\" } } }, \"pull_request\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\", \"id\": 34778301, \"html_url\": \"https://github.com/baxterthehacker/public-repo/pull/1\", \"diff_url\": \"https://github.com/baxterthehacker/public-repo/pull/1.diff\", \"patch_url\": \"https://github.com/baxterthehacker/public-repo/pull/1.patch\", \"issue_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1\", \"number\": 1, \"state\": \"open\", \"locked\": false, \"title\": \"Update the README with new information\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"body\": \"This is a pretty simple change that we need to pull into master.\", \"created_at\": \"2015-05-05T23:40:27Z\", \"updated_at\": \"2015-05-05T23:40:27Z\", \"closed_at\": null, \"merged_at\": null, \"merge_commit_sha\": \"18721552ba489fb84e12958c1b5694b5475f7991\", \"assignee\": null, \"milestone\": null, \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits\", \"review_comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments\", \"review_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"head\": { \"label\": \"baxterthehacker:changes\", \"ref\": \"changes\", \"sha\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"repo\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" } }, \"base\": { \"label\": \"baxterthehacker:master\", \"ref\": \"master\", \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"user\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"repo\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" } }, \"_links\": { \"self\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1\" }, \"html\": { \"href\": \"https://github.com/baxterthehacker/public-repo/pull/1\" }, \"issue\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1\" }, \"comments\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/1/comments\" }, \"review_comments\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/comments\" }, \"review_comment\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/comments{/number}\" }, \"commits\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls/1/commits\" }, \"statuses\": { \"href\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\" } } }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 1, \"forks\": 0, \"open_issues\": 1, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   PushEvent Triggered when a repository branch is pushed to. In addition to branch pushes, webhook push events are also triggered when repository tags are pushed.  The Events API PushEvent payload is described in the table below. The example payload below that is from a webhook delivery and will differ from the Events API PushEvent payload.   Events API payload    Key Type Description     ref string The full Git ref that was pushed. Example: \"refs/heads/master\".   head string The SHA of the most recent commit on ref after the push.   before string The SHA of the most recent commit on ref before the push.   size integer The number of commits in the push.   distinct_size integer The number of distinct commits in the push.   commits array An array of commit objects describing the pushed commits. (The array includes a maximum of 20 commits. If necessary, you can use the Commits API to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries.)   commits[][sha] string The SHA of the commit.   commits[][message] string The commit message.   commits[][author] object The git author of the commit.   commits[][author][name] string The git author's name.   commits[][author][email] string The git author's email address.   commits[][url] url Points to the commit API resource.   commits[][distinct] boolean Whether this commit is distinct from any that have been pushed before.     Webhook event name push  Webhook payload example { \"ref\": \"refs/heads/changes\", \"before\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"after\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"created\": false, \"deleted\": false, \"forced\": false, \"base_ref\": null, \"compare\": \"https://github.com/baxterthehacker/public-repo/compare/9049f1265b7d...0d1a26e67d8f\", \"commits\": [ { \"id\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"distinct\": true, \"message\": \"Update README.md\", \"timestamp\": \"2015-05-05T19:40:15-04:00\", \"url\": \"https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"author\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"username\": \"baxterthehacker\" }, \"committer\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"username\": \"baxterthehacker\" }, \"added\": [ ], \"removed\": [ ], \"modified\": [ \"README.md\" ] } ], \"head_commit\": { \"id\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"distinct\": true, \"message\": \"Update README.md\", \"timestamp\": \"2015-05-05T19:40:15-04:00\", \"url\": \"https://github.com/baxterthehacker/public-repo/commit/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"author\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"username\": \"baxterthehacker\" }, \"committer\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"username\": \"baxterthehacker\" }, \"added\": [ ], \"removed\": [ ], \"modified\": [ \"README.md\" ] }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\" }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://github.com/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": 1430869212, \"updated_at\": \"2015-05-05T23:40:12Z\", \"pushed_at\": 1430869217, \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\", \"stargazers\": 0, \"master_branch\": \"master\" }, \"pusher\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   ReleaseEvent Triggered when a release is published.  Events API payload    Key Type Description     action string The action that was performed. Currently, can only be \"published\".   release object The release itself.     Webhook event name release  Webhook payload example { \"action\": \"published\", \"release\": { \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases/1261438\", \"assets_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases/1261438/assets\", \"upload_url\": \"https://uploads.github.com/repos/baxterthehacker/public-repo/releases/1261438/assets{?name}\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/releases/tag/0.0.1\", \"id\": 1261438, \"tag_name\": \"0.0.1\", \"target_commitish\": \"master\", \"name\": null, \"draft\": false, \"author\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"prerelease\": false, \"created_at\": \"2015-05-05T23:40:12Z\", \"published_at\": \"2015-05-05T23:40:38Z\", \"assets\": [ ], \"tarball_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tarball/0.0.1\", \"zipball_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/zipball/0.0.1\", \"body\": null }, \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:38Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   RepositoryEvent Triggered when a repository is created. Events of this type are not visible in timelines, they are only used to trigger organization webhooks.  Events API payload    Key Type Description     action string The action that was performed. Currently, can only be \"created\".   repository object The repository that was created.     Webhook event name repository  Webhook payload example { \"action\": \"created\", \"repository\": { \"id\": 27496774, \"name\": \"new-repository\", \"full_name\": \"baxterandthehackers/new-repository\", \"owner\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterandthehackers\", \"html_url\": \"https://github.com/baxterandthehackers\", \"followers_url\": \"https://api.github.com/users/baxterandthehackers/followers\", \"following_url\": \"https://api.github.com/users/baxterandthehackers/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterandthehackers/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterandthehackers/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterandthehackers/orgs\", \"repos_url\": \"https://api.github.com/users/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/users/baxterandthehackers/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterandthehackers/received_events\", \"type\": \"Organization\", \"site_admin\": false }, \"private\": true, \"html_url\": \"https://github.com/baxterandthehackers/new-repository\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterandthehackers/new-repository\", \"forks_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/forks\", \"keys_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/events\", \"assignees_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/issues/comments/{number}\", \"contents_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/merges\", \"archive_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterandthehackers/new-repository/releases{/id}\", \"created_at\": \"2014-12-03T16:39:25Z\", \"updated_at\": \"2014-12-03T16:39:25Z\", \"pushed_at\": \"2014-12-03T16:39:25Z\", \"git_url\": \"git://github.com/baxterandthehackers/new-repository.git\", \"ssh_url\": \"git@github.com:baxterandthehackers/new-repository.git\", \"clone_url\": \"https://github.com/baxterandthehackers/new-repository.git\", \"svn_url\": \"https://github.com/baxterandthehackers/new-repository\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": false, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\" }, \"organization\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"url\": \"https://api.github.com/orgs/baxterandthehackers\", \"repos_url\": \"https://api.github.com/orgs/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/orgs/baxterandthehackers/events\", \"members_url\": \"https://api.github.com/orgs/baxterandthehackers/members{/member}\", \"public_members_url\": \"https://api.github.com/orgs/baxterandthehackers/public_members{/member}\", \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=2\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=2\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   StatusEvent Triggered when the status of a Git commit changes. Events of this type are not visible in timelines, they are only used to trigger hooks.  Events API payload    Key Type Description     sha string The Commit SHA.   state string The new state. Can be pending, success, failure, or error.   description string The optional human-readable description added to the status.   target_url string The optional link added to the status.   branches array An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.     Webhook event name status  Webhook payload example { \"id\": 214015194, \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"name\": \"baxterthehacker/public-repo\", \"target_url\": null, \"context\": \"default\", \"description\": null, \"state\": \"success\", \"commit\": { \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"commit\": { \"author\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"date\": \"2015-05-05T23:40:12Z\" }, \"committer\": { \"name\": \"baxterthehacker\", \"email\": \"baxterthehacker@users.noreply.github.com\", \"date\": \"2015-05-05T23:40:12Z\" }, \"message\": \"Initial commit\", \"tree\": { \"sha\": \"02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0\", \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees/02b49ad0ba4f1acd9f06531b21e16a4ac5d341d0\" }, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"comment_count\": 1 }, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"html_url\": \"https://github.com/baxterthehacker/public-repo/commit/9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b/comments\", \"author\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"committer\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"parents\": [ ] }, \"branches\": [ { \"name\": \"master\", \"commit\": { \"sha\": \"9049f1265b7d61be4a8904a9a27120d2064dab3b\", \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits/9049f1265b7d61be4a8904a9a27120d2064dab3b\" } }, { \"name\": \"changes\", \"commit\": { \"sha\": \"0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\", \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits/0d1a26e67d8f5eaf1f6ba5c57fc3c7d91ac0fd1c\" } }, { \"name\": \"gh-pages\", \"commit\": { \"sha\": \"b11bb7545ac14abafc6191a0481b0d961e7793c6\", \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits/b11bb7545ac14abafc6191a0481b0d961e7793c6\" } } ], \"created_at\": \"2015-05-05T23:40:39Z\", \"updated_at\": \"2015-05-05T23:40:39Z\", \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:39Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } }   TeamAddEvent Triggered when a repository is added to a team. Events of this type are not visible in timelines. These events are only used to trigger hooks.  Events API payload    Key Type Description     team object The team that was modified. Note: older events may not include this in the payload.   repository object The repository that was added to this team.     Webhook event name team_add  Webhook payload example { \"team\": { \"name\": \"github\", \"id\": 836012, \"slug\": \"github\", \"description\": \"\", \"permission\": \"pull\", \"url\": \"https://api.github.com/teams/836012\", \"members_url\": \"https://api.github.com/teams/836012/members{/member}\", \"repositories_url\": \"https://api.github.com/teams/836012/repos\" }, \"repository\": { \"id\": 35129393, \"name\": \"public-repo\", \"full_name\": \"baxterandthehackers/public-repo\", \"owner\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterandthehackers\", \"html_url\": \"https://github.com/baxterandthehackers\", \"followers_url\": \"https://api.github.com/users/baxterandthehackers/followers\", \"following_url\": \"https://api.github.com/users/baxterandthehackers/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterandthehackers/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterandthehackers/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterandthehackers/orgs\", \"repos_url\": \"https://api.github.com/users/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/users/baxterandthehackers/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterandthehackers/received_events\", \"type\": \"Organization\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterandthehackers/public-repo\", \"description\": \"\", \"fork\": true, \"url\": \"https://api.github.com/repos/baxterandthehackers/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterandthehackers/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:30Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterandthehackers/public-repo.git\", \"ssh_url\": \"git@github.com:baxterandthehackers/public-repo.git\", \"clone_url\": \"https://github.com/baxterandthehackers/public-repo.git\", \"svn_url\": \"https://github.com/baxterandthehackers/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": false, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 0, \"forks\": 0, \"open_issues\": 0, \"watchers\": 0, \"default_branch\": \"master\" }, \"organization\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"url\": \"https://api.github.com/orgs/baxterandthehackers\", \"repos_url\": \"https://api.github.com/orgs/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/orgs/baxterandthehackers/events\", \"members_url\": \"https://api.github.com/orgs/baxterandthehackers/members{/member}\", \"public_members_url\": \"https://api.github.com/orgs/baxterandthehackers/public_members{/member}\", \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"description\": null }, \"sender\": { \"login\": \"baxterandthehackers\", \"id\": 7649605, \"avatar_url\": \"https://avatars.githubusercontent.com/u/7649605?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterandthehackers\", \"html_url\": \"https://github.com/baxterandthehackers\", \"followers_url\": \"https://api.github.com/users/baxterandthehackers/followers\", \"following_url\": \"https://api.github.com/users/baxterandthehackers/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterandthehackers/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterandthehackers/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterandthehackers/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterandthehackers/orgs\", \"repos_url\": \"https://api.github.com/users/baxterandthehackers/repos\", \"events_url\": \"https://api.github.com/users/baxterandthehackers/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterandthehackers/received_events\", \"type\": \"Organization\", \"site_admin\": false } }   WatchEvent The WatchEvent is related to starring a repository, not watching. See this API blog post for an explanation. The event’s actor is the user who starred a repository, and the event’s repository is the repository that was starred.  Events API payload    Key Type Description     action string The action that was performed. Currently, can only be started.     Webhook event name watch  Webhook payload example { \"action\": \"started\", \"repository\": { \"id\": 35129377, \"name\": \"public-repo\", \"full_name\": \"baxterthehacker/public-repo\", \"owner\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false }, \"private\": false, \"html_url\": \"https://github.com/baxterthehacker/public-repo\", \"description\": \"\", \"fork\": false, \"url\": \"https://api.github.com/repos/baxterthehacker/public-repo\", \"forks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/forks\", \"keys_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/keys{/key_id}\", \"collaborators_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/collaborators{/collaborator}\", \"teams_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/teams\", \"hooks_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/hooks\", \"issue_events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/events{/number}\", \"events_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/events\", \"assignees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/assignees{/user}\", \"branches_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/branches{/branch}\", \"tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/tags\", \"blobs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/blobs{/sha}\", \"git_tags_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/tags{/sha}\", \"git_refs_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/refs{/sha}\", \"trees_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/trees{/sha}\", \"statuses_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/statuses/{sha}\", \"languages_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/languages\", \"stargazers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/stargazers\", \"contributors_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contributors\", \"subscribers_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscribers\", \"subscription_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/subscription\", \"commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/commits{/sha}\", \"git_commits_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/git/commits{/sha}\", \"comments_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/comments{/number}\", \"issue_comment_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues/comments{/number}\", \"contents_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/contents/{+path}\", \"compare_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/compare/{base}...{head}\", \"merges_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/merges\", \"archive_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/{archive_format}{/ref}\", \"downloads_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/downloads\", \"issues_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/issues{/number}\", \"pulls_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/pulls{/number}\", \"milestones_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/milestones{/number}\", \"notifications_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/notifications{?since,all,participating}\", \"labels_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/labels{/name}\", \"releases_url\": \"https://api.github.com/repos/baxterthehacker/public-repo/releases{/id}\", \"created_at\": \"2015-05-05T23:40:12Z\", \"updated_at\": \"2015-05-05T23:40:30Z\", \"pushed_at\": \"2015-05-05T23:40:27Z\", \"git_url\": \"git://github.com/baxterthehacker/public-repo.git\", \"ssh_url\": \"git@github.com:baxterthehacker/public-repo.git\", \"clone_url\": \"https://github.com/baxterthehacker/public-repo.git\", \"svn_url\": \"https://github.com/baxterthehacker/public-repo\", \"homepage\": null, \"size\": 0, \"stargazers_count\": 0, \"watchers_count\": 0, \"language\": null, \"has_issues\": true, \"has_downloads\": true, \"has_wiki\": true, \"has_pages\": true, \"forks_count\": 0, \"mirror_url\": null, \"open_issues_count\": 2, \"forks\": 0, \"open_issues\": 2, \"watchers\": 0, \"default_branch\": \"master\" }, \"sender\": { \"login\": \"baxterthehacker\", \"id\": 6752317, \"avatar_url\": \"https://avatars.githubusercontent.com/u/6752317?v=3\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/baxterthehacker\", \"html_url\": \"https://github.com/baxterthehacker\", \"followers_url\": \"https://api.github.com/users/baxterthehacker/followers\", \"following_url\": \"https://api.github.com/users/baxterthehacker/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/baxterthehacker/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/baxterthehacker/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/baxterthehacker/subscriptions\", \"organizations_url\": \"https://api.github.com/users/baxterthehacker/orgs\", \"repos_url\": \"https://api.github.com/users/baxterthehacker/repos\", \"events_url\": \"https://api.github.com/users/baxterthehacker/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/baxterthehacker/received_events\", \"type\": \"User\", \"site_admin\": false } } "
  },
  
  
  {
    "title": "Events",
    
    "url": "/api/activity/events/",
    "body": " Events This is a read-only API to the GitHub events. These events power the various activity streams on the site.  List public events List repository events List issue events for a repository List public events for a network of repositories List public events for an organization List events that a user has received List public events that a user has received List events performed by a user List public events performed by a user List events for an organization  Events are optimized for polling with the \"ETag\" header. If no new events have been triggered, you will see a \"304 Not Modified\" response, and your current rate limit will be untouched. There is also an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll. In times of high server load, the time may increase. Please obey the header.  curl -I https://api.github.com/users/tater/events HTTP/1.1 200 OK X-Poll-Interval: 60 ETag: \"a18c3bded88eb5dbb5c849a489412bf3\" # The quotes around the ETag value are important curl -I https://api.github.com/users/tater/events \\  -H 'If-None-Match: \"a18c3bded88eb5dbb5c849a489412bf3\"' HTTP/1.1 304 Not Modified X-Poll-Interval: 60  Events support pagination, however the per_page option is unsupported. The fixed page size is 30 items. Fetching up to ten pages is supported, for a total of 300 events. Only events created within the past 90 days will be included in timelines. Events older than 90 days will not be included (even if the total number of events in the timeline is less than 300). All Events have the same response format: Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"type\": \"Event\", \"public\": true, \"payload\": { }, \"repo\": { \"id\": 3, \"name\": \"octocat/Hello-World\", \"url\": \"https://api.github.com/repos/octocat/Hello-World\" }, \"actor\": { \"id\": 1, \"login\": \"octocat\", \"gravatar_id\": \"\", \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"url\": \"https://api.github.com/users/octocat\" }, \"org\": { \"id\": 1, \"login\": \"github\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/orgs/github\", \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\" }, \"created_at\": \"2011-09-06T17:26:27Z\", \"id\": \"12345\" } ]   List public events GET /events   List repository events GET /repos/:owner/:repo/events   List issue events for a repository Repository issue events have a different format than other events, as documented in the Issue Events API. GET /repos/:owner/:repo/issues/events   List public events for a network of repositories GET /networks/:owner/:repo/events   List public events for an organization GET /orgs/:org/events   List events that a user has received These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events. GET /users/:username/received_events   List public events that a user has received GET /users/:username/received_events/public   List events performed by a user If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events. GET /users/:username/events   List public events performed by a user GET /users/:username/events/public   List events for an organization This is the user's organization dashboard. You must be authenticated as the user to view this. GET /users/:username/events/orgs/:org "
  },
  
  
  {
    "title": "Feeds",
    
    "url": "/api/activity/feeds/",
    "body": " Feeds  List Feeds   List Feeds GitHub provides several timeline resources in Atom format. The Feeds API lists all the feeds available to the authenticated user:   Timeline: The GitHub global public timeline  User: The public timeline for any user, using URI template   Current user public: The public timeline for the authenticated user  Current user: The private timeline for the authenticated user  Current user actor: The private timeline for activity created by the authenticated user  Current user organizations: The private timeline for the organizations the authenticated user is a member of.  Note: Private feeds are only returned when authenticating via Basic Auth since current feed URIs use the older, non revocable auth tokens. GET /feeds   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"timeline_url\": \"https://github.com/timeline\", \"user_url\": \"https://github.com/{user}\", \"current_user_public_url\": \"https://github.com/defunkt\", \"current_user_url\": \"https://github.com/defunkt.private?token=abc123\", \"current_user_actor_url\": \"https://github.com/defunkt.private.actor?token=abc123\", \"current_user_organization_url\": \"\", \"current_user_organization_urls\": [ \"https://github.com/organizations/github/defunkt.private.atom?token=abc123\" ], \"_links\": { \"timeline\": { \"href\": \"https://github.com/timeline\", \"type\": \"application/atom+xml\" }, \"user\": { \"href\": \"https://github.com/{user}\", \"type\": \"application/atom+xml\" }, \"current_user_public\": { \"href\": \"https://github.com/defunkt\", \"type\": \"application/atom+xml\" }, \"current_user\": { \"href\": \"https://github.com/defunkt.private?token=abc123\", \"type\": \"application/atom+xml\" }, \"current_user_actor\": { \"href\": \"https://github.com/defunkt.private.actor?token=abc123\", \"type\": \"application/atom+xml\" }, \"current_user_organization\": { \"href\": \"\", \"type\": \"\" }, \"current_user_organizations\": [ { \"href\": \"https://github.com/organizations/github/defunkt.private.atom?token=abc123\", \"type\": \"application/atom+xml\" } ] } } "
  },
  
  
  {
    "title": "Notifications",
    
    "url": "/api/activity/notifications/",
    "body": " Notifications  Notification Reasons List your notifications List your notifications in a repository Mark as read Mark notifications as read in a repository View a single thread Mark a thread as read Get a Thread Subscription Set a Thread Subscription Delete a Thread Subscription  Users receive notifications for conversations in repositories they watch including:  Issues and their comments Pull Requests and their comments Comments on any commits  Notifications are also sent for conversations in unwatched repositories when the user is involved including:  @mentions Issue assignments Commits the user authors or commits Any discussion in which the user actively participates  All Notification API calls require the notifications or repo API scopes. Doing this will give read-only access to some Issue/Commit content. You will still need the \"repo\" scope to access Issues and Commits from their respective endpoints. Notifications come back as \"threads\". A Thread contains information about the current discussion of an Issue/PullRequest/Commit. Notifications are optimized for polling with the \"Last-Modified\" header. If there are no new notifications, you will see a \"304 Not Modified\" response, leaving your current rate limit untouched. There is an \"X-Poll-Interval\" header that specifies how often (in seconds) you are allowed to poll. In times of high server load, the time may increase. Please obey the header.  # Add authentication to your requests curl -I https://api.github.com/notifications HTTP/1.1 200 OK Last-Modified: Thu, 25 Oct 2012 15:16:27 GMT X-Poll-Interval: 60 # Pass the Last-Modified header exactly curl -I https://api.github.com/notifications  -H \"If-Modified-Since: Thu, 25 Oct 2012 15:16:27 GMT\" HTTP/1.1 304 Not Modified X-Poll-Interval: 60   Notification Reasons When retrieving responses from the Notifications API, each payload has a key titled reason. These correspond to events that trigger a notification. Here's a list of potential reasons for receiving a notification:    Reason Name Description     subscribed The notification arrived because you're watching the repository   manual The notification arrived because you've specifically decided to subscribe to the thread (via an Issue or Pull Request)   author The notification arrived because you've created the thread   comment The notification arrived because you've commented on the thread   mention The notification arrived because you were specifically @mentioned in the content   team_mention The notification arrived because you were on a team that was mentioned (like @org/team)   state_change The notification arrived because you changed the thread state (like closing an Issue or merging a Pull Request)   assign The notification arrived because you were assigned to the Issue    Note that the reason is modified on a per-thread basis, and can change, if the reason on a later notification is different. For example, if you are the author of an issue, subsequent notifications on that issue will have a reason of author. If you're then @mentioned on the same issue, the notifications you fetch thereafter will have a reason of mention. The reason remains as mention, regardless of whether you're ever mentioned again.  List your notifications List all notifications for the current user, grouped by repository. GET /notifications   Parameters    Name Type Description     all boolean If true, show notifications marked as read. Default: false    participating boolean If true, only shows notifications in which the user is directly participating or mentioned. Default: false    since string Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now    before string Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.     Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"id\": \"1\", \"repository\": { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\" }, \"subject\": { \"title\": \"Greetings\", \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\", \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\", \"type\": \"Issue\" }, \"reason\": \"subscribed\", \"unread\": true, \"updated_at\": \"2014-11-07T22:01:45Z\", \"last_read_at\": \"2014-11-07T22:01:45Z\", \"url\": \"https://api.github.com/notifications/threads/1\" } ]   List your notifications in a repository List all notifications for the current user. GET /repos/:owner/:repo/notifications   Parameters    Name Type Description     all boolean If true, show notifications marked as read. Default: false    participating boolean If true, only shows notifications in which the user is directly participating or mentioned. Default: false    since string Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now    before string Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.     Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"id\": \"1\", \"repository\": { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\" }, \"subject\": { \"title\": \"Greetings\", \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\", \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\", \"type\": \"Issue\" }, \"reason\": \"subscribed\", \"unread\": true, \"updated_at\": \"2014-11-07T22:01:45Z\", \"last_read_at\": \"2014-11-07T22:01:45Z\", \"url\": \"https://api.github.com/notifications/threads/1\" } ]   Mark as read Marking a notification as \"read\" removes it from the default view on GitHub.com. PUT /notifications   Parameters    Name Type Description     last_read_at string Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now      Response Status: 205 Reset Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Mark notifications as read in a repository Marking all notifications in a repository as \"read\" removes them from the default view on GitHub.com. PUT /repos/:owner/:repo/notifications   Parameters    Name Type Description     last_read_at string Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now      Response Status: 205 Reset Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   View a single thread GET /notifications/threads/:id   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": \"1\", \"repository\": { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\" }, \"subject\": { \"title\": \"Greetings\", \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\", \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\", \"type\": \"Issue\" }, \"reason\": \"subscribed\", \"unread\": true, \"updated_at\": \"2014-11-07T22:01:45Z\", \"last_read_at\": \"2014-11-07T22:01:45Z\", \"url\": \"https://api.github.com/notifications/threads/1\" }   Mark a thread as read PATCH /notifications/threads/:id   Response Status: 205 Reset Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Get a Thread Subscription This checks to see if the current user is subscribed to a thread. You can also get a Repository subscription.  Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were @mentioned, or manually subscribe to a thread.  GET /notifications/threads/:id/subscription   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"subscribed\": true, \"ignored\": false, \"reason\": null, \"created_at\": \"2012-10-06T21:34:12Z\", \"url\": \"https://api.github.com/notifications/threads/1/subscription\", \"thread_url\": \"https://api.github.com/notifications/threads/1\" }   Set a Thread Subscription This lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get @mentioned once more). PUT /notifications/threads/:id/subscription   Parameters    Name Type Description     subscribed boolean Determines if notifications should be received from this thread   ignored boolean Determines if all notifications should be blocked from this thread     Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"subscribed\": true, \"ignored\": false, \"reason\": null, \"created_at\": \"2012-10-06T21:34:12Z\", \"url\": \"https://api.github.com/notifications/threads/1/subscription\", \"thread_url\": \"https://api.github.com/notifications/threads/1\" }   Delete a Thread Subscription DELETE /notifications/threads/:id/subscription   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999 "
  },
  
  
  {
    "title": "Starring",
    
    "url": "/api/activity/starring/",
    "body": " Starring  List Stargazers List repositories being starred Check if you are starring a repository Star a repository Unstar a repository  Repository Starring is a feature that lets users bookmark repositories. Stars are shown next to repositories to show an approximate level of interest. Stars have no effect on notifications or the activity feed. For that, see Repository Watching.  Starring vs. Watching In August 2012, we changed the way watching works on GitHub. Many API client applications may be using the original \"watcher\" endpoints for accessing this data. You can now start using the \"star\" endpoints instead (described below). Check out the Watcher API Change post for more details.  List Stargazers GET /repos/:owner/:repo/stargazers   Response Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false } ]   Alternative response with star creation timestamps You can also find out when stars were created by passing the following custom media type via the Accept header: Accept: application/vnd.github.v3.star+json  Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"starred_at\": \"2011-01-16T19:06:43Z\", \"user\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false } } ]   List repositories being starred List repositories being starred by a user. GET /users/:username/starred  List repositories being starred by the authenticated user. GET /user/starred   Parameters    Name Type Description     sort string One of created (when the repository was starred) or updated (when it was last pushed to). Default: created    direction string One of asc (ascending) or desc (descending). Default: desc      Response Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\", \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\", \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\", \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\", \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\", \"clone_url\": \"https://github.com/octocat/Hello-World.git\", \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\", \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\", \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\", \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\", \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\", \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\", \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\", \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\", \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\", \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\", \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\", \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\", \"git_url\": \"git:github.com/octocat/Hello-World.git\", \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\", \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\", \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\", \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\", \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\", \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\", \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\", \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\", \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\", \"mirror_url\": \"git:git.example.com/octocat/Hello-World\", \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since, all, participating}\", \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\", \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\", \"ssh_url\": \"git@github.com:octocat/Hello-World.git\", \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\", \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\", \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\", \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\", \"svn_url\": \"https://svn.github.com/octocat/Hello-World\", \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\", \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\", \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\", \"homepage\": \"https://github.com\", \"language\": null, \"forks_count\": 9, \"stargazers_count\": 80, \"watchers_count\": 80, \"size\": 108, \"default_branch\": \"master\", \"open_issues_count\": 0, \"has_issues\": true, \"has_wiki\": true, \"has_pages\": false, \"has_downloads\": true, \"pushed_at\": \"2011-01-26T19:06:43Z\", \"created_at\": \"2011-01-26T19:01:12Z\", \"updated_at\": \"2011-01-26T19:14:43Z\", \"permissions\": { \"admin\": false, \"push\": false, \"pull\": true } } ]   Alternative response with star creation timestamps You can also find out when stars were created by passing the following custom media type via the Accept header: Accept: application/vnd.github.v3.star+json  Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"starred_at\": \"2011-01-16T19:06:43Z\", \"repo\": { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\", \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\", \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\", \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\", \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\", \"clone_url\": \"https://github.com/octocat/Hello-World.git\", \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\", \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\", \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\", \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\", \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\", \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\", \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\", \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\", \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\", \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\", \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\", \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\", \"git_url\": \"git:github.com/octocat/Hello-World.git\", \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\", \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\", \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\", \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\", \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\", \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\", \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\", \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\", \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\", \"mirror_url\": \"git:git.example.com/octocat/Hello-World\", \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since, all, participating}\", \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\", \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\", \"ssh_url\": \"git@github.com:octocat/Hello-World.git\", \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\", \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\", \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\", \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\", \"svn_url\": \"https://svn.github.com/octocat/Hello-World\", \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\", \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\", \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\", \"homepage\": \"https://github.com\", \"language\": null, \"forks_count\": 9, \"stargazers_count\": 80, \"watchers_count\": 80, \"size\": 108, \"default_branch\": \"master\", \"open_issues_count\": 0, \"has_issues\": true, \"has_wiki\": true, \"has_pages\": false, \"has_downloads\": true, \"pushed_at\": \"2011-01-26T19:06:43Z\", \"created_at\": \"2011-01-26T19:01:12Z\", \"updated_at\": \"2011-01-26T19:14:43Z\", \"permissions\": { \"admin\": false, \"push\": false, \"pull\": true } } } ]   Check if you are starring a repository Requires for the user to be authenticated. GET /user/starred/:owner/:repo   Response if this repository is starred by you Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Response if this repository is not starred by you Status: 404 Not Found X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Star a repository Requires for the user to be authenticated. PUT /user/starred/:owner/:repo  Note that you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see \"HTTP verbs.\"  Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Unstar a repository Requires for the user to be authenticated. DELETE /user/starred/:owner/:repo   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999 "
  },
  
  
  {
    "title": "Watching",
    
    "url": "/api/activity/watching/",
    "body": " Watching  List watchers List repositories being watched Get a Repository Subscription Set a Repository Subscription Delete a Repository Subscription Check if you are watching a repository (LEGACY) Watch a repository (LEGACY) Stop watching a repository (LEGACY)  Watching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed. See Repository Starring for simple repository bookmarks.  Watching vs. Starring In August 2012, we changed the way watching works on GitHub. At the time of that change, many API clients were already using the existing \"watcher\" endpoints to access starring data. To avoid breaking those applications, the legacy \"watcher\" endpoints continue to provide starring data. To provide access to watching data, the v3 Watcher API uses the \"subscription\" endpoints described below. Check out the Watcher API Change post for more details.  List watchers GET /repos/:owner/:repo/subscribers   Response Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false } ]   List repositories being watched List repositories being watched by a user. GET /users/:username/subscriptions  List repositories being watched by the authenticated user. GET /user/subscriptions   Response Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"id\": 1296269, \"owner\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false }, \"name\": \"Hello-World\", \"full_name\": \"octocat/Hello-World\", \"description\": \"This your first repo!\", \"private\": false, \"fork\": false, \"url\": \"https://api.github.com/repos/octocat/Hello-World\", \"html_url\": \"https://github.com/octocat/Hello-World\", \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\", \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\", \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\", \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\", \"clone_url\": \"https://github.com/octocat/Hello-World.git\", \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\", \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\", \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\", \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\", \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\", \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\", \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\", \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\", \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\", \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\", \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\", \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\", \"git_url\": \"git:github.com/octocat/Hello-World.git\", \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\", \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\", \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\", \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\", \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\", \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\", \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\", \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\", \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\", \"mirror_url\": \"git:git.example.com/octocat/Hello-World\", \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since, all, participating}\", \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\", \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\", \"ssh_url\": \"git@github.com:octocat/Hello-World.git\", \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\", \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\", \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\", \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\", \"svn_url\": \"https://svn.github.com/octocat/Hello-World\", \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\", \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\", \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\", \"homepage\": \"https://github.com\", \"language\": null, \"forks_count\": 9, \"stargazers_count\": 80, \"watchers_count\": 80, \"size\": 108, \"default_branch\": \"master\", \"open_issues_count\": 0, \"has_issues\": true, \"has_wiki\": true, \"has_pages\": false, \"has_downloads\": true, \"pushed_at\": \"2011-01-26T19:06:43Z\", \"created_at\": \"2011-01-26T19:01:12Z\", \"updated_at\": \"2011-01-26T19:14:43Z\", \"permissions\": { \"admin\": false, \"push\": false, \"pull\": true } } ]   Get a Repository Subscription GET /repos/:owner/:repo/subscription   Response if you are subscribed to the repository Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"subscribed\": true, \"ignored\": false, \"reason\": null, \"created_at\": \"2012-10-06T21:34:12Z\", \"url\": \"https://api.github.com/repos/octocat/example/subscription\", \"repository_url\": \"https://api.github.com/repos/octocat/example\" }   Response if you are not subscribed to the repository Status: 404 Not Found X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Set a Repository Subscription PUT /repos/:owner/:repo/subscription   Parameters    Name Type Description     subscribed boolean Determines if notifications should be received from this repository.   ignored boolean Determines if all notifications should be blocked from this repository.     If you would like to watch a repository, set subscribed to true. If you would like to ignore notifications made within a repository, set ignored to true. If you would like to stop watching a repository, delete the repository's subscription completely.   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"subscribed\": true, \"ignored\": false, \"reason\": null, \"created_at\": \"2012-10-06T21:34:12Z\", \"url\": \"https://api.github.com/repos/octocat/example/subscription\", \"repository_url\": \"https://api.github.com/repos/octocat/example\" }   Delete a Repository Subscription  This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, set the repository's subscription manually.  DELETE /repos/:owner/:repo/subscription   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Check if you are watching a repository (LEGACY) Requires for the user to be authenticated. GET /user/subscriptions/:owner/:repo   Response if this repository is watched by you Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Response if this repository is not watched by you Status: 404 Not Found X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Watch a repository (LEGACY) Requires the user to be authenticated. PUT /user/subscriptions/:owner/:repo  Note that you'll need to set Content-Length to zero when calling out to this endpoint. For more information, see \"HTTP verbs.\"  Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Stop watching a repository (LEGACY) Requires for the user to be authenticated. DELETE /user/subscriptions/:owner/:repo   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999 "
  },
  
  
  {
    "title": "Activity",
    
    "url": "/api/activity/",
    "body": " Activity Serving up the 'social' in Social Coding, the Activity APIs provide access to notifications, subscriptions, and timelines.  Events  The Events API is a read-only interface to all the event types that power the various activity streams on GitHub.  Feeds  List of Atom feeds available for the authenticated user.  Notifications  Notifications of new comments are delivered to users. The Notifications API lets you view these notifications and mark them as read.  Starring  Repository Starring is a feature that lets users bookmark repositories. Stars are shown next to repositories to show an approximate level of interest. Stars have no effect on notifications or the activity feed.  Watching  Watching a Repository registers the user to receive notifications on new discussions, as well as events in the user's activity feed."
  },
  
  
  {
    "title": "Other Authentication Methods",
    
    "url": "/api/auth/",
    "body": " Other Authentication Methods  Basic Authentication Working with two-factor authentication  While the API provides multiple methods for authentication, we strongly recommend using OAuth for production applications. The other methods provided are intended to be used for scripts or testing (i.e., cases where full OAuth would be overkill). Third party applications that rely on GitHub for authentication should not ask for or collect GitHub credentials. Instead, they should use the OAuth web flow.  Basic Authentication The API supports Basic Authentication as defined in RFC2617 with a few slight differences. The main difference is that the RFC requires unauthenticated requests to be answered with 401 Unauthorized responses. In many places, this would disclose the existence of user data. Instead, the GitHub API responds with 404 Not Found. This may cause problems for HTTP libraries that assume a 401 Unauthorized response. The solution is to manually craft the Authorization header.  Via Username and Password To use Basic Authentication with the GitHub API, simply send the username and password associated with the account. For example, if you're accessing the API via cURL, the following command would authenticate you if you replace &lt;username&gt; with your GitHub username. (cURL will prompt you to enter the password.)  curl -u username https://api.github.com/user   Via OAuth Tokens Alternatively, you can use personal access tokens or OAuth tokens instead of your password.  curl -u username:token https://api.github.com/user  This approach is useful if your tools only support Basic Authentication but you want to take advantage of OAuth access token security features.  Working with two-factor authentication For users with two-factor authentication enabled, Basic Authentication requires an extra step. When you attempt to authenticate with Basic Authentication, the server will respond with a 401 and an X-GitHub-OTP: required; :2fa-type header. This indicates that a two-factor authentication code is needed (in addition to the username and password). The :2fa-type in this header indicates whether the account receives its two-factor authentication codes via SMS or via an application. In addition to the Basic Authentication credentials, you must send the user's authentication code (i.e., one-time password) in the X-GitHub-OTP header. Because these authentication codes expire quickly, we recommend using the Authorizations API to create an access token and using that token to authenticate via OAuth for most API access. Alternately, you can create access tokens from the Personal Access Token settings page."
  },
  
  
  {
    "title": "Media Types",
    
    "url": "/api/media/",
    "body": " Media Types  Comment Body Properties Git Blob Properties Commits, Commit comparison, and Pull Requests Repository contents Gists  Custom media types are used in the API to let consumers choose the format of the data they wish to receive. This is done by adding one or more of the following types to the Accept header when you make a request. Media types are specific to resources, allowing them to change independently and support formats that other resources don't. All GitHub media types look like this: application/vnd.github[.version].param[+json]  The most basic media types the API supports are: application/json application/vnd.github+json  Neither of these specify a version, so you will always get the current default JSON representation of resources.   Important: The default version of the API may change in the future. If you're building an application and care about the stability of the API, be sure to request a specific version in the Accept header as shown in the examples below.   You can specify a version like so: application/vnd.github.v3+json  If you're specifying a property (such as full/raw/etc defined below), put the version before the property: application/vnd.github.v3.raw+json  You can check the current version through every response's headers. Look for the X-GitHub-Media-Type header:  curl https://api.github.com/users/technoweenie -I HTTP/1.1 200 OK X-GitHub-Media-Type: github.v3 curl https://api.github.com/users/technoweenie -I \\  -H \"Accept: application/vnd.github.full+json\" HTTP/1.1 200 OK X-GitHub-Media-Type: github.v3; param=full; format=json curl https://api.github.com/users/technoweenie -I \\  -H \"Accept: application/vnd.github.v3.full+json\" HTTP/1.1 200 OK X-GitHub-Media-Type: github.v3; param=full; format=json   Comment Body Properties The body of a comment can be written in GitHub Flavored Markdown. Issues, Issue Comments, Pull Request Comments, and Gist Comments all accept these same media types:  Raw application/vnd.github.VERSION.raw+json  Return the raw markdown body. Response will include body. This is the default if you do not pass any specific media type.  Text application/vnd.github.VERSION.text+json  Return a text only representation of the markdown body. Response will include body_text.  HTML application/vnd.github.VERSION.html+json  Return HTML rendered from the body's markdown. Response will include body_html.  Full application/vnd.github.VERSION.full+json  Return raw, text and HTML representations. Response will include body, body_text, and body_html:  Git Blob Properties The following media types are allowed when getting a blob:  JSON application/vnd.github.VERSION+json application/json  Return JSON representation of the blob with content as a base64 encoded string. This is the default if nothing is passed.  Raw application/vnd.github.VERSION.raw  Return the raw blob data.  Commits, Commit comparison, and Pull Requests The Commit, Commit Comparison, and Pull Request resources support diff and patch formats:  diff application/vnd.github.VERSION.diff   patch application/vnd.github.VERSION.patch   Repository contents  Raw application/vnd.github.VERSION.raw  Return the raw contents of a file. This is the default if you do not pass any specific media type.  HTML application/vnd.github.VERSION.html  For markup files such as Markdown or AsciiDoc, you can retrieve the rendered HTML using the .html media type. Markup languages are rendered to HTML using our open-source Markup library.  Gists  Raw application/vnd.github.VERSION.raw  Return the raw contents of a gist. This is the default if you do not pass any specific media type.  base64 application/vnd.github.VERSION.base64  The gist contents are base64-encoded before being sent out. This can be useful if your gist contains any invalid UTF-8 sequences."
  },
  
  
  {
    "title": "OAuth",
    
    "url": "/api/oauth/",
    "body": " OAuth  Web Application Flow Non-Web Application Flow Redirect URLs Scopes Common errors for the authorization request Common errors for the access token request Directing users to review their access for an application  OAuth2 is a protocol that lets external apps request authorization to private details in a user's GitHub account without getting their password. This is preferred over Basic Authentication because tokens can be limited to specific types of data, and can be revoked by users at any time. All developers need to register their application before getting started. A registered OAuth application is assigned a unique Client ID and Client Secret. The Client Secret should not be shared. You may create a personal access token for your own use or implement the web flow below to allow other users to authorize your application. GitHub's OAuth implementation supports the standard authorization code grant type. Developers should implement the web application flow described below to obtain an authorization code and then exchange it for a token. (The implicit grant type is not supported.)  Web Application Flow This is a description of the OAuth2 flow from 3rd party web sites.  1. Redirect users to request GitHub access GET https://github.com/login/oauth/authorize   Parameters    Name Type Description     client_id string  Required. The client ID you received from GitHub when you registered.   redirect_uri string The URL in your app where users will be sent after authorization. See details below about redirect urls.   scope string A comma separated list of scopes. If not provided, scope defaults to an empty list of scopes for users that don't have a valid token for the app. For users who do already have a valid token for the app, the user won't be shown the OAuth authorization page with the list of scopes. Instead, this step of the flow will automatically complete with the same scopes that were used last time the user completed the flow.   state string An unguessable random string. It is used to protect against cross-site request forgery attacks.     2. GitHub redirects back to your site If the user accepts your request, GitHub redirects back to your site with a temporary code in a code parameter as well as the state you provided in the previous step in a state parameter. If the states don't match, the request has been created by a third party and the process should be aborted. Exchange this for an access token: POST https://github.com/login/oauth/access_token   Parameters    Name Type Description     client_id string  Required. The client ID you received from GitHub when you registered.   client_secret string  Required. The client secret you received from GitHub when you registered.   code string  Required. The code you received as a response to Step 1.   redirect_uri string The URL in your app where users will be sent after authorization. See details below about redirect urls.   state string The unguessable random string you optionally provided in Step 1.     Response By default, the response will take the following form: access_token=e72e16c7e42f292c6912e7710c838347ae178b4a&amp;scope=user%2Cgist&amp;token_type=bearer  You can also receive the content in different formats depending on the Accept header: Accept: application/json {\"access_token\":\"e72e16c7e42f292c6912e7710c838347ae178b4a\", \"scope\":\"repo,gist\", \"token_type\":\"bearer\"} Accept: application/xml &lt;OAuth&gt; &lt;token_type&gt;bearer&lt;/token_type&gt; &lt;scope&gt;repo,gist&lt;/scope&gt; &lt;access_token&gt;e72e16c7e42f292c6912e7710c838347ae178b4a&lt;/access_token&gt; &lt;/OAuth&gt;   Requested scopes vs. granted scopes The scope attribute lists scopes attached to the token that were granted by the user. Normally, these scopes will be identical to what you requested. However, users will soon be able to edit their scopes, effectively granting your application less access than you originally requested. Also, users will also be able to edit token scopes after the OAuth flow completed. You should be aware of this possibility and adjust your application's behavior accordingly. It is important to handle error cases where a user chooses to grant you less access than you originally requested. For example, applications can warn or otherwise communicate with their users that they will see reduced functionality or be unable to perform some actions. Also, applications can always send users back through the flow again to get additional permission, but don’t forget that users can always say no. Check out the Basics of Authentication guide which provides tips on handling modifiable token scopes.  Normalized scopes When requesting multiple scopes, the token will be saved with a normalized list of scopes, discarding those that are implicitly included by another requested scope. For example, requesting user,gist,user:email will result in a token with user and gist scopes only since the access granted with user:email scope is included in the user scope.  3. Use the access token to access the API The access token allows you to make requests to the API on a behalf of a user. GET https://api.github.com/user?access_token=...  You can pass the token in the query params like shown above, but a cleaner approach is to include it in the Authorization header Authorization: token OAUTH-TOKEN  For example, in curl you can set the Authorization header like this:  curl -H \"Authorization: token OAUTH-TOKEN\" https://api.github.com/user   Non-Web Application Flow Use Basic Authentication to create an OAuth2 token using the interface below. With this technique, a username and password need not be stored permanently, and the user can revoke access at any time. (Make sure to understand how to work with two-factor authentication if you or your users have two-factor authentication enabled.)  Redirect URLs The redirect_uri parameter is optional. If left out, GitHub will redirect users to the callback URL configured in the OAuth Application settings. If provided, the redirect URL's host and port must exactly match the callback URL. The redirect URL's path must reference a subdirectory of the callback URL. CALLBACK: http://example.com/path GOOD: http://example.com/path GOOD: http://example.com/path/subdir/other BAD: http://example.com/bar BAD: http://example.com/ BAD: http://example.com:8080/path BAD: http://oauth.example.com:8080/path BAD: http://example.org   Scopes Scopes let you specify exactly what type of access you need. Scopes limit access for OAuth tokens. They do not grant any additional permission beyond that which the user already has. For the web flow, requested scopes will be displayed to the user on the authorize form. Check headers to see what OAuth scopes you have, and what the API action accepts.  curl -H \"Authorization: token OAUTH-TOKEN\" https://api.github.com/users/technoweenie -I HTTP/1.1 200 OK X-OAuth-Scopes: repo, user X-Accepted-OAuth-Scopes: user  X-OAuth-Scopes lists the scopes your token has authorized. X-Accepted-OAuth-Scopes lists the scopes that the action checks for.    Name Description     (no scope) Grants read-only access to public information (includes public user profile info, public repository info, and gists)   user Grants read/write access to profile info only. Note that this scope includes user:email and user:follow.   user:email Grants read access to a user's email addresses.   user:follow Grants access to follow or unfollow other users.   public_repo Grants read/write access to code, commit statuses, collaborators, and deployment statuses for public repositories and organizations. Also required for starring public repositories.   repo Grants read/write access to code, commit statuses, collaborators, and deployment statuses for public and private repositories and organizations.   repo_deployment Grants access to deployment statuses for public and private repositories. This scope is only necessary to grant other users or services access to deployment statuses, without granting access to the code.   repo:status Grants read/write access to public and private repository commit statuses. This scope is only necessary to grant other users or services access to private repository commit statuses without granting access to the code.   delete_repo Grants access to delete adminable repositories.   notifications Grants read access to a user's notifications. repo also provides this access.   gist Grants write access to gists.   read:repo_hook Grants read and ping access to hooks in public or private repositories.   write:repo_hook Grants read, write, and ping access to hooks in public or private repositories.   admin:repo_hook Grants read, write, ping, and delete access to hooks in public or private repositories.   admin:org_hook Grants read, write, ping, and delete access to organization hooks. Note: OAuth tokens will only be able to perform these actions on organization hooks which were created by the OAuth application. Personal access tokens will only be able to perform these actions on organization hooks created by a user.   read:org Read-only access to organization, teams, and membership.   write:org Publicize and unpublicize organization membership.   admin:org Fully manage organization, teams, and memberships.   read:public_key List and view details for public keys.   write:public_key Create, list, and view details for public keys.   admin:public_key Fully manage public keys.    NOTE: Your application can request the scopes in the initial redirection. You can specify multiple scopes by separating them with a comma: https://github.com/login/oauth/authorize? client_id=...&amp; scope=user,public_repo   Common errors for the authorization request There are a few things that can go wrong in the process of obtaining an OAuth token for a user. In the initial authorization request phase, these are some errors you might see:  Application Suspended If the OAuth application you set up has been suspended (due to reported abuse, spam, or a mis-use of the API), GitHub will redirect to the registered callback URL with the following parameters summarizing the error: http://your-application.com/callback?error=application_suspended &amp;error_description=Your+application+has+been+suspended.+Contact+support@github.com. &amp;error_uri=https://developer.github.com/v3/oauth/%23application-suspended &amp;state=xyz  Please contact support to solve issues with suspended applications.  Redirect URI mismatch If you provide a redirect_uri that doesn't match what you've registered with your application, GitHub will redirect to the registered callback URL with the following parameters summarizing the error: http://your-application.com/callback?error=redirect_uri_mismatch &amp;error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application. &amp;error_uri=https://developer.github.com/v3/oauth/%23redirect-uri-mismatch &amp;state=xyz  To correct this error, either provide a redirect_uri that matches what you registered or leave out this parameter to use the default one registered with your application.  Access denied If the user rejects access to your application, GitHub will redirect to the registered callback URL with the following parameters summarizing the error: http://your-application.com/callback?error=access_denied &amp;error_description=The+user+has+denied+your+application+access. &amp;error_uri=https://developer.github.com/v3/oauth/%23access-denied &amp;state=xyz  There's nothing you can do here as users are free to choose not to use your application. More often than not, users will just close the window or press back in their browser, so it is likely that you'll never see this error.  Common errors for the access token request In the second phase of exchanging a code for an access token, there are an additional set of errors that can occur. The format of these responses is determined by the accept header you pass. The following examples only show JSON responses.  Incorrect client credentials If the client_id and or client_secret you pass are incorrect you will receive this error response. { \"error\": \"incorrect_client_credentials\", \"error_description\": \"The client_id and/or client_secret passed are incorrect.\", \"error_uri\": \"https://developer.github.com/v3/oauth/#incorrect-client-credentials\" }  To solve this error, go back and make sure you have the correct credentials for your oauth application. Double check the client_id and client_secret to make sure they are correct and being passed correctly to GitHub.  Redirect URI mismatch(2) If you provide a redirect_uri that doesn't match what you've registered with your application, you will receive this error message: { \"error\": \"redirect_uri_mismatch\", \"error_description\": \"The redirect_uri MUST match the registered callback URL for this application.\", \"error_uri\": \"https://developer.github.com/v3/oauth/#redirect-uri-mismatch(2)\" }  To correct this error, either provide a redirect_uri that matches what you registered or leave out this parameter to use the default one registered with your application.  Bad verification code { \"add_scopes\": [ \"repo\" ], \"note\": \"admin script\" }  If the verification code you pass is incorrect, expired, or doesn't match what you received in the first request for authorization you will receive this error. { \"error\": \"bad_verification_code\", \"error_description\": \"The code passed is incorrect or expired.\", \"error_uri\": \"https://developer.github.com/v3/oauth/#bad-verification-code\" }  To solve this error, start the OAuth process over from the beginning and get a new code.  Directing users to review their access for an application Users can review and revoke their application authorizations from the settings screen within GitHub. A user's organizations control whether an application can access organization data. Integrators can deep link to the authorization information for their particular app to let their end users review these details. To build this link, you'll need your OAuth application's client_id you received from GitHub when you registered the application. https://github.com/settings/connections/applications/:client_id  For tips on discovering the resources that your application can access for a user, be sure to check out our guide."
  },
  
  
  {
    "title": "Authorizations",
    
    "url": "/api/oauth_authorizations/",
    "body": " OAuth Authorizations API  List your authorizations Get a single authorization Create a new authorization Get-or-create an authorization for a specific app Get-or-create an authorization for a specific app and fingerprint Update an existing authorization Delete an authorization Check an authorization Reset an authorization Revoke all authorizations for an application Revoke an authorization for an application More Information  You can use this API to manage your OAuth applications. You can only access this API via Basic Authentication using your username and password, not tokens. Make sure you understand how to work with two-factor authentication if you or your users have two-factor authentication enabled.   Deprecation Notice  The token attribute is deprecated in all of the following OAuth Authorizations API responses:   List your authorizations Get a single authorization  Get-or-create an authorization for a specific app - token is still returned for \"create\"   Get-or-create an authorization for a specific app and fingerprint - token is still returned for \"create\"  Update an existing authorization   To reduce the impact of removing the token value, the OAuth Authorizations API now includes a new request attribute (fingerprint), three new response attributes (token_last_eight, hashed_token, and fingerprint), and one new endpoint.   This functionality became the default for all requests on April 20, 2015. Please see the blog post for full details.    List your authorizations GET /authorizations   Response Status: 200 OK Link: &lt;https://api.github.com/resource?page=2&gt;; rel=\"next\", &lt;https://api.github.com/resource?page=5&gt;; rel=\"last\" X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  [ { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\" } ]   Get a single authorization GET /authorizations/:id   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\" }   Create a new authorization If you need a small number of tokens, implementing the web flow can be cumbersome. Instead, tokens can be created using the OAuth Authorizations API using Basic Authentication. To create tokens for a particular OAuth application, you must provide its client ID and secret, found on the OAuth application settings page, linked from your OAuth applications listing on GitHub. If your OAuth application intends to create multiple tokens for one user you should use fingerprint to differentiate between them. OAuth tokens can also be created through the web UI via the Personal access tokens settings. Read more about these tokens on the GitHub Help page. POST /authorizations   Parameters    Name Type Description     scopes array A list of scopes that this authorization is in.   note string  Required. A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.   note_url string A URL to remind you what app the OAuth token is for.   client_id string The 20 character OAuth app client key for which to create the token.   client_secret string The 40 character OAuth app client secret for which to create the token.   fingerprint string A unique string to distinguish an authorization from others created for the same client ID and user.    { \"scopes\": [ \"public_repo\" ], \"note\": \"admin script\" }   Response Status: 201 Created Location: https://api.github.com/authorizations/1 X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"abcdefgh12345678\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"\" }   Get-or-create an authorization for a specific app This method will create a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one. PUT /authorizations/clients/:client_id   Parameters    Name Type Description     client_secret string  Required. The 40 character OAuth app client secret associated with the client ID specified in the URL.   scopes array A list of scopes that this authorization is in.   note string A note to remind you what the OAuth token is for.   note_url string A URL to remind you what app the OAuth token is for.   fingerprint string A unique string to distinguish an authorization from others created for the same client and user. If provided, this API is functionally equivalent to Get-or-create an authorization for a specific app and fingerprint.    { \"client_secret\": \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\", \"scopes\": [ \"public_repo\" ], \"note\": \"admin script\" }   Response if returning a new token Status: 201 Created Location: https://api.github.com/authorizations/1 X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"abcdefgh12345678\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"\" }   Response if returning an existing token Status: 200 OK Location: https://api.github.com/authorizations/1 X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"\" }   Get-or-create an authorization for a specific app and fingerprint This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. fingerprint is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one. PUT /authorizations/clients/:client_id/:fingerprint   Parameters    Name Type Description     client_secret string  Required. The 40 character OAuth app client secret associated with the client ID specified in the URL.   scopes array A list of scopes that this authorization is in.   note string A note to remind you what the OAuth token is for.   note_url string A URL to remind you what app the OAuth token is for.    { \"client_secret\": \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\", \"scopes\": [ \"public_repo\" ], \"note\": \"admin script\" }   Response if returning a new token Status: 201 Created Location: https://api.github.com/authorizations/1 X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"abcdefgh12345678\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\" }   Response if returning an existing token Status: 200 OK Location: https://api.github.com/authorizations/1 X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\" }   Update an existing authorization PATCH /authorizations/:id   Parameters    Name Type Description     scopes array Replaces the authorization scopes with these.   add_scopes array A list of scopes to add to this authorization.   remove_scopes array A list of scopes to remove from this authorization.   note string A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.   note_url string A URL to remind you what app the OAuth token is for.   fingerprint string A unique string to distinguish an authorization from others created for the same client ID and user.    You can only send one of these scope keys at a time. { \"add_scopes\": [ \"repo\" ], \"note\": \"admin script\" }   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\" }   Delete an authorization DELETE /authorizations/:id   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Check an authorization OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use Basic Authentication when accessing it, where the username is the OAuth application client_id and the password is its client_secret. Invalid tokens will return 404 NOT FOUND. GET /applications/:client_id/tokens/:access_token   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"abcdefgh12345678\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\", \"user\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false } }   Reset an authorization OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use Basic Authentication when accessing it, where the username is the OAuth application client_id and the password is its client_secret. Invalid tokens will return 404 NOT FOUND. POST /applications/:client_id/tokens/:access_token   Response Status: 200 OK X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999  { \"id\": 1, \"url\": \"https://api.github.com/authorizations/1\", \"scopes\": [ \"public_repo\" ], \"token\": \"abcdefgh12345678\", \"token_last_eight\": \"12345678\", \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\", \"app\": { \"url\": \"http://my-github-app.com\", \"name\": \"my github app\", \"client_id\": \"abcde12345fghij67890\" }, \"note\": \"optional note\", \"note_url\": \"http://optional/note/url\", \"updated_at\": \"2011-09-06T20:39:23Z\", \"created_at\": \"2011-09-06T17:26:27Z\", \"fingerprint\": \"jklmnop12345678\", \"user\": { \"login\": \"octocat\", \"id\": 1, \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\", \"gravatar_id\": \"\", \"url\": \"https://api.github.com/users/octocat\", \"html_url\": \"https://github.com/octocat\", \"followers_url\": \"https://api.github.com/users/octocat/followers\", \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\", \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\", \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\", \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\", \"organizations_url\": \"https://api.github.com/users/octocat/orgs\", \"repos_url\": \"https://api.github.com/users/octocat/repos\", \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\", \"received_events_url\": \"https://api.github.com/users/octocat/received_events\", \"type\": \"User\", \"site_admin\": false } }   Revoke all authorizations for an application OAuth application owners can revoke every token for an OAuth application. You must use Basic Authentication when calling this method. The username is the OAuth application client_id and the password is its client_secret. Tokens are revoked via a background job, and it might take a few minutes for the process to complete. DELETE /applications/:client_id/tokens   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   Revoke an authorization for an application OAuth application owners can also revoke a single token for an OAuth application. You must use Basic Authentication for this method, where the username is the OAuth application client_id and the password is its client_secret. DELETE /applications/:client_id/tokens/:access_token   Response Status: 204 No Content X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4999   More Information It can be a little tricky to get started with OAuth. Here are a few links that might be of help:  OAuth 2 spec Facebook Login API Ruby OAuth2 lib Simple Ruby/Sinatra example  Python Flask example using requests-oauthlib   Simple Python example using python-oauth2  Ruby OmniAuth example Ruby Sinatra extension Ruby Warden strategy "
  },
  
  
  {
    "title": "Troubleshooting",
    
    "url": "/api/troubleshooting/",
    "body": " Troubleshooting  Why am I getting a 404 error on a repository that exists? Why am I not seeing all my results? Can I get my rate limits bumped?  If you're encountering some oddities in the API, here's a list of resolutions to some of the problems you may be experiencing.  Why am I getting a 404 error on a repository that exists? Typically, we send a 404 error when your client isn't properly authenticated. You might expect to see a 403 Forbidden in these cases. However, since we don't want to provide any information about private repositories, the API returns a 404 error instead. To troubleshoot, ensure you're authenticating correctly, your OAuth access token has the required scopes, and third-party application restrictions are not blocking access.  Why am I not seeing all my results? Most API calls accessing a list of resources (e.g., users, issues, e.t.c.) support pagination. If you're making requests and receiving an incomplete set of results, you're probably only seeing the first page. You'll need to request the remaining pages in order to get more results. It's important to not try and guess the format of the pagination URL. Not every API call uses the same structure. Instead, extract the pagination information from the Link Header, which is sent with every request.  Can I get my rate limits bumped? The GitHub API has a pretty lenient quota for rate limits, for your enjoyment and our safety. You can read more about it here. If you're using OAuth or Basic Authentication and are hitting your rate limits, you might be able to fix the issue by either caching our results, or using conditional requests. In certain exceptional cases, we may temporarily bump your rate limit higher. You should be prepared to answer technical questions about your goal and your planned usage of the API. We may still choose not to bump your limit if we feel that you can achieve your wildest dreams with the current rate limit (but don't worry, we'll help you out)."
  },
  
  
  {
    "title": "Versions",
    
    "url": "/api/versions/",
    "body": " Versions There are two stable versions of the GitHub API: the v3 version and the deprecated beta version. There are just a few differences between these two versions. By default, all requests receive the v3 version. We encourage you to request a specific version via the Accept header.  v3 The v3 API is stable, and we strive to ensure that all changes are backwards compatible. Please file a support issue if you have problems. Some v3 functionality is deprecated and will be removed in the next major version of the API.  Differences from beta version The v3 media type differs from the beta media type in just a few places:  Gist JSON For Gists, the v3 media type renames the user attribute to owner.  Issue JSON When an issue is not a pull request, the v3 media type omits the pull_request attribute.  Repository JSON For Repositories, the v3 media type omits the master_branch attribute. API clients should use the default_branch attribute to obtain the repository's default branch.  User Emails JSON For User Emails, the v3 media type returns an array of objects (instead of an array of strings).  v3 deprecations The following functionality is deprecated. For backwards compatibility purposes, v3 will continue to provide this functionality. However, this deprecated functionality will be removed in the next major version of the API. The recommendations below will help you prepare your application for the next major version of the API.  Method: /gists/:id/fork : Recommendation: Use /gists/:id/forks (plural) instead. Method: /legacy/issues/search/:owner/:repository/:state/:keyword : Recommendation: Use v3 Issue Search API instead. Method: /legacy/repos/search/:keyword : Recommendation: Use v3 Repository Search API instead. Method: /legacy/user/search/:keyword : Recommendation: Use v3 User Search API instead. Method: /legacy/user/email/:email : Recommendation: Use v3 User Search API instead. Method: /repos/:owner/:repo/hooks/:id/test : Recommendation: Use /repos/:owner/:repo/hooks/:id/tests (plural) instead. Method: /teams/:id/members/:username : Recommendation: Use Get Team Membership, Add Team Membership, and Remove Team Membership instead. Query parameters when POSTing to /repos/:owner/:repo/forks : Recommendation: Use JSON to POST to this method instead. Query parameter value: Passing \"watchers\" as the value for the \"sort\" parameter in a GET request to /repos/:owner/:repo/forks : Recommendation: Use stargazers as the value instead. Pull Request attribute: merge_commit_sha : Recommendation: Do not use this attribute. Rate Limit attribute: rate : Recommendation: Use resources[\"core\"] instead. Repository attribute: forks : Recommendation: Use forks_count instead. Repository attribute: master_branch : Recommendation: Use default_branch instead. Repository attribute: open_issues : Recommendation: Use open_issues_count instead. Repository attribute: public : Recommendation: When creating a repository, use the private attribute to indicate whether the repository should be public or private. Do not use the public attribute. Repository attribute: watchers : Recommendation: Use watchers_count instead. User attribute: bio : Recommendation: Do not use this attribute. It is obsolete. User attribute: plan[\"collaborators\"] : Recommendation: Do not use this attribute. It is obsolete. User attribute: gravatar_id : Recommendation: Use avatar_url instead. Feed attribute: current_user_organization_url : Recommendation: Use current_user_organization_urls instead. Feed attribute: current_user_organization : Recommendation: Use current_user_organizations instead. Pagination parameters top and sha for method: /repos/:owner/:repo/commits : Recommendation: When fetching the list of commits for a repository use the standard per_page and page parameters for pagination, instead of per_page, top, and sha. Authorization attribute: token : Recommendation: This attribute will return an empty string in the majority of the Authorizations API responses. Please see the deprecation blog post and the Authorizations API deprecation notice for full details. Team attribute: permission : Recommendation: This attribute no longer dictates the permission a team has on its repositories; it only dictates the default permission that the Add team repository API will use for requests where no permission attribute is specified. To change the permission level for every repository on a team, use the List team repositories API to list all of the team's repositories, and then use the Add team repository with a permission attribute to update each repository's permission separately.    beta (Deprecated) The beta API is deprecated. Its current functionality is stable, and we strive to ensure that any changes are backwards compatible. Please file a support issue if you have problems.  Note: We recommend using the v3 API instead of the deprecated beta version of the API. The beta media type differs from the v3 media type in just a few places. In most cases, migrating an application from the beta media type to the v3 media type is smooth and painless. We will eventually retire the beta version, but we have no official retirement date to announce at the moment. When the time comes, rest assured that we'll announce the retirement with plenty of notice.   Breaking beta changes  June 15th, 2011:   gravatar_url is being deprecated in favor of avatar_url for all responses that include users or orgs. A default size is no longer included in the URL. Creating new gists (both anonymously and with an authenticated user) should use POST /gists from now on. POST /users/:username/gists is no longer supported.   June 1st, 2011:  Removed support for PUT verb on update requests. Use POST or PATCH instead. Removed .json extension from all URLs. No longer using the X-Next or X-Last headers. Pagination info is returned in the Link header instead. JSON-P response has completely changed to a more consistent format. Starring gists now uses PUT verb (instead of POST) and returns 204.   v2 We removed support for API v2 on June 12, 2012.  v1 We removed support for API v1 on June 12, 2012."
  },
  
  
  {
    "title": "GitHub API v3",
    
    "url": "/api/",
    "body": " Overview This describes the resources that make up the official PerfectGym API.  General HTTP Verbs Requests Responses   General All API access is over HTTPS, and accessed from the yoursubdomain.perfectgym.com/api/. All data is sent and received as JSON.  curl -i https://yoursubdomain.perfectgym.com/api/Classes/GetClasses/1/0 HTTP/1.1 200 OK Cache-Control: no-cache Pragma: no-cache Content-Length: 61 Content-Type: application/json; charset=utf-8 Expires: -1 Server: Microsoft-IIS/8.5 WWW-Authenticate: Bearer X-AspNet-Version: 4.0.30319 X-Powered-By: ASP.NET pg-app: externalapi X-Powered-By: ARR/3.0 pg-app: Routing Date: Fri, 18 Dec 2015 16:47:49 GMT   Blank fields Blank fields are included as null instead of being omitted.  Identifiers &amp; timestamps All resources are identified with long id and timestamp attributes.  Date format All dates and times follow the ISO 8601 format and are provided in local time zone: YYYY-MM-DDTHH:MM:SS   HTTP Verbs    Verb Description     GET Used for retrieving resources.   POST Used for creating / updating resources or invoking actions.     Requests  Parameters GET requests parameters are specified as path segment.  Example: In this example, the 1 and 0 values are provided for the clubId and timestamp parameters in the path. GET Classes/GetClasses/{clubId}/{timestamp}   curl -i https://yoursubdomain.perfectgym.com/api/Classes/GetClasses/1/0  POST requests parameters are specified as path segment (or JSON body with Content-Type of 'application-json' when explicitly required).  Timestamp parameter Requests with timestamp parameter returns list of resources added or changed after point in time represented by timestamp value. Result is ordered by timestamp ascending. Example: In this example we fetch list of classes from the club with id of 1 and with timestamp value greater then 654321.  curl -i https://yoursubdomain.perfectgym.com/api/Classes/GetClasses/1/0   Responses  GET Response schema    Attribute Name Description     elements This means a required field on a resource has not been set.     POST Response schema    Attribute Name Description     success  true if request completed successfuly, false otherwise.   details Information containing request result details.     Summary Representations When you fetch a list of resources, the response includes a subset of the attributes for that resource. This is the \"summary\" representation of the resource. (Some attributes are computationally expensive for the API to provide. For performance reasons, the summary representation excludes those attributes. To obtain those attributes, fetch the \"detailed\" representation.) Example: When you get a list of classes, you get the summary representation of each class type. Here, we fetch the list of classes in a given club: GET Classes/GetClasses/{clubId}/{timestamp}   Detailed Representations When you fetch an individual resource, the response typically includes all attributes for that resource. This is the \"detailed\" representation of the resource. Example: When you get an individual class, you get the detailed representation of the class: GET Classes/GetClass/{classId}  The documentation provides an example response for each API method. The example response illustrates all attributes that are returned by that method.   "
  },
  
  
  
  {
    "title": "Automating deployments to integrators",
    
    "url": "/guides/automating-deployments-to-integrators/",
    "body": " Automating deployments to integrators  Sending deployments whenever you push to a repository Hooking up an integrator to deployments  The \"Delivering deployments\" guide describes how to build a server that uses the Deployments API to easily get your code from GitHub into production. But what if you don't want to host a separate service for deploying code? What if you just want to merge code and have it deploy without thinking about maintaining another app? You can use the GitHub Auto-Deployment service to receive changes made to your repository and configure it to deliver a deployment to integrators. The Auto-Deployment service can deliver payloads based on two events: whenever a push is made and whenever the CI status is passing. Here's a diagram demonstrating what the process might look like: +--------------------+ +--------+ +-----------+ | GitHub Auto-Deploy | | GitHub | | Heroku | | Service | +--------+ +-----------+ +--------------------+ | | | | | | Create Deployment | | |------------------------&gt;| | | | | | | | | | Deployment Event | | |---------------------------------&gt;| | | | | | Deployment Status (pending) | | |&lt;---------------------------------| | | | | | | | | Deployment Status (success) | | |&lt;---------------------------------| | | |   Note that the Auto-Deployment service only picks up changes from your default branch, which is usually master.   Sending deployments whenever you push to a repository The Auto-Deployment service will be responsible for creating deployments when a push is made to your default branch. Next, we'll set up a service to receive those deployment events and handle the deployment of your project.  Navigate to the repository where you’re setting up your deployments. In your repository's right sidebar, click . On the left, click Webhooks &amp; Services.   Click Add service, then type \"GitHub Auto-Deployment.\"   Under GitHub token, paste an access token you've created. It must have at least the repo scope. For more information, see \"Creating an access token for command-line use.\" Under Environments, optionally provide a list of environments you'd like to send your deployments to. This can be any string you define to describe your environment. The default is \"production.\" If you only want builds that successfully passed a continuous test suite, select Deploy on status. If you're running this service on GitHub Enterprise, you must pass in your appliance's endpoint URL. Click Add service.   Hooking up an integrator to deployments To implement our deployments, we'll use Heroku as an example service.  Navigate to the repository where you’re setting up your deployments. In your repository's right sidebar, click . On the left, click Webhooks &amp; Services.   Click Add service, then type \"Heroku.\"   Type the name of the Heroku application your GitHub repository should deploy to. Enter in your Heroku OAuth token. You must generate this yourself following the instructions in Heroku's documentation. Under GitHub token, paste the same token you provided earlier. Click Add service.  From now on, any commits made to your master branch--including those generated from merging pull requests--will automatically trigger a deployment to your Heroku application."
  },
  
  
  {
    "title": "Basics of Authentication",
    
    "url": "/guides/basics-of-authentication/",
    "body": " Basics of Authentication  Registering your app Accepting user authorization Implementing \"persistent\" authentication  In this section, we're going to focus on the basics of authentication. Specifically, we're going to create a Ruby server (using Sinatra) that implements the web flow of an application in several different ways.  You can download the complete source code for this project from the platform-samples repo.   Registering your app First, you'll need to register your application. Every registered OAuth application is assigned a unique Client ID and Client Secret. The Client Secret should not be shared! That includes checking the string into your repository. You can fill out every piece of information however you like, except the Authorization callback URL. This is easily the most important piece to setting up your application. It's the callback URL that GitHub returns the user to after successful authentication. Since we're running a regular Sinatra server, the location of the local instance is set to http://localhost:4567. Let's fill in the callback URL as http://localhost:4567/callback.  Accepting user authorization Now, let's start filling out our simple server. Create a file called server.rb and paste this into it: require 'sinatra' require 'rest-client' require 'json' CLIENT_ID = ENV['GH_BASIC_CLIENT_ID'] CLIENT_SECRET = ENV['GH_BASIC_SECRET_ID'] get '/' do erb :index, :locals =&gt; {:client_id =&gt; CLIENT_ID} end  Your client ID and client secret keys come from your application's configuration page. You should never, ever store these values in GitHub--or any other public place, for that matter. We recommend storing them as environment variables--which is exactly what we've done here. Next, in views/index.erb, paste this content: &lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt; Well, hello there! &lt;/p&gt; &lt;p&gt; We're going to now talk to the GitHub API. Ready? &lt;a href=\"https://github.com/login/oauth/authorize?scope=user:email&amp;client_id=&lt;%= client_id %&gt;\"&gt;Click here&lt;/a&gt; to begin!&lt;/a&gt; &lt;/p&gt; &lt;p&gt; If that link doesn't work, remember to provide your own &lt;a href=\"/v3/oauth/#web-application-flow\"&gt;Client ID&lt;/a&gt;! &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;  (If you're unfamiliar with how Sinatra works, we recommend reading the Sinatra guide.) Also, notice that the URL uses the scope query parameter to define the scopes requested by the application. For our application, we're requesting user:email scope for reading private email addresses. Navigate your browser to http://localhost:4567. After clicking on the link, you should be taken to GitHub, and presented with a dialog that looks something like this:  If you trust yourself, click Authorize App. Wuh-oh! Sinatra spits out a 404 error. What gives?! Well, remember when we specified a Callback URL to be callback? We didn't provide a route for it, so GitHub doesn't know where to drop the user after they authorize the app. Let's fix that now!  Providing a callback In server.rb, add a route to specify what the callback should do: get '/callback' do # get temporary GitHub code... session_code = request.env['rack.request.query_hash']['code'] # ... and POST it back to GitHub result = RestClient.post('https://github.com/login/oauth/access_token', {:client_id =&gt; CLIENT_ID, :client_secret =&gt; CLIENT_SECRET, :code =&gt; session_code}, :accept =&gt; :json) # extract the token and granted scopes access_token = JSON.parse(result)['access_token'] end  After a successful app authentication, GitHub provides a temporary code value. You'll need to POST this code back to GitHub in exchange for an access_token. To simplify our GET and POST HTTP requests, we're using the rest-client. Note that you'll probably never access the API through REST. For a more serious application, you should probably use a library written in the language of your choice.  Checking granted scopes In the future, users will be able to edit the scopes you requested, and your application might be granted less access than you originally asked for. So, before making any requests with the token, you should check the scopes that were granted for the token by the user. The scopes that were granted are returned as a part of the response from exchanging a token. get '/callback' do # ... # Get the access_token using the code sample above # ... # check if we were granted user:email scope scopes = JSON.parse(result)['scope'].split(',') has_user_email_scope = scopes.include? 'user:email' end  In our application, we're using scopes.include? to check if we were granted the user:email scope needed for fetching the authenticated user's private email addresses. Had the application asked for other scopes, we would have checked for those as well. Also, since there's a hierarchical relationship between scopes, you should check that you were granted the lowest level of required scopes. For example, if the application had asked for user scope, it might have been granted only user:email scope. In that case, the application wouldn't have been granted what it asked for, but the granted scopes would have still been sufficient. Checking for scopes only before making requests is not enough since it's posible that users will change the scopes in between your check and the actual request. In case that happens, API calls you expected to succeed might fail with a 404 or 401 status, or return a different subset of information. To help you gracefully handle these situations, all API responses for requests made with valid tokens also contain an X-OAuth-Scopes header. This header contains the list of scopes of the token that was used to make the request. In addition to that, the Authorization API provides an endpoint to check a token for validity. Use this information to detect changes in token scopes, and inform your users of changes in available application functionality.  Making authenticated requests At last, with this access token, you'll be able to make authenticated requests as the logged in user: # fetch user information auth_result = JSON.parse(RestClient.get('https://api.github.com/user', {:params =&gt; {:access_token =&gt; access_token}})) # if the user authorized it, fetch private emails if has_user_email_scope auth_result['private_emails'] = JSON.parse(RestClient.get('https://api.github.com/user/emails', {:params =&gt; {:access_token =&gt; access_token}})) end erb :basic, :locals =&gt; auth_result  We can do whatever we want with our results. In this case, we'll just dump them straight into basic.erb: &lt;p&gt;Hello, &lt;%= login %&gt;!&lt;/p&gt; &lt;p&gt; &lt;% if !email.nil? &amp;&amp; !email.empty? %&gt; It looks like your public email address is &lt;%= email %&gt;. &lt;% else %&gt; It looks like you don't have a public email. That's cool. &lt;% end %&gt; &lt;/p&gt; &lt;p&gt; &lt;% if defined? private_emails %&gt; With your permission, we were also able to dig up your private email addresses: &lt;%= private_emails.map{ |private_email_address| private_email_address[\"email\"] }.join(', ') %&gt; &lt;% else %&gt; Also, you're a bit secretive about your private email addresses. &lt;% end %&gt; &lt;/p&gt;   Implementing \"persistent\" authentication It'd be a pretty bad model if we required users to log into the app every single time they needed to access the web page. For example, try navigating directly to http://localhost:4567/basic. You'll get an error. What if we could circumvent the entire \"click here\" process, and just remember that, as long as the user's logged into GitHub, they should be able to access this application? Hold on to your hat, because that's exactly what we're going to do. Our little server above is rather simple. In order to wedge in some intelligent authentication, we're going to switch over to using sessions for storing tokens. This will make authentication transparent to the user. Also, since we're persisting scopes within the session, we'll need to handle cases when the user updates the scopes after we checked them, or revokes the token. To do that, we'll use a rescue block and check that the first API call succeeded, which verifies that the token is still valid. After that, we'll check the X-OAuth-Scopes response header to verify that the user hasn't revoked the user:email scope. Create a file called advanced_server.rb, and paste these lines into it: require 'sinatra' require 'rest_client' require 'json' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below # if ENV['GITHUB_CLIENT_ID'] &amp;&amp; ENV['GITHUB_CLIENT_SECRET'] # CLIENT_ID = ENV['GITHUB_CLIENT_ID'] # CLIENT_SECRET = ENV['GITHUB_CLIENT_SECRET'] # end CLIENT_ID = ENV['GH_BASIC_CLIENT_ID'] CLIENT_SECRET = ENV['GH_BASIC_SECRET_ID'] use Rack::Session::Pool, :cookie_only =&gt; false def authenticated? session[:access_token] end def authenticate! erb :index, :locals =&gt; {:client_id =&gt; CLIENT_ID} end get '/' do if !authenticated? authenticate! else access_token = session[:access_token] scopes = [] begin auth_result = RestClient.get('https://api.github.com/user', {:params =&gt; {:access_token =&gt; access_token}, :accept =&gt; :json}) rescue =&gt; e # request didn't succeed because the token was revoked so we # invalidate the token stored in the session and render the # index page so that the user can start the OAuth flow again session[:access_token] = nil return authenticate! end # the request succeeded, so we check the list of current scopes if auth_result.headers.include? :x_oauth_scopes scopes = auth_result.headers[:x_oauth_scopes].split(', ') end auth_result = JSON.parse(auth_result) if scopes.include? 'user:email' auth_result['private_emails'] = JSON.parse(RestClient.get('https://api.github.com/user/emails', {:params =&gt; {:access_token =&gt; access_token}, :accept =&gt; :json})) end erb :advanced, :locals =&gt; auth_result end end get '/callback' do session_code = request.env['rack.request.query_hash']['code'] result = RestClient.post('https://github.com/login/oauth/access_token', {:client_id =&gt; CLIENT_ID, :client_secret =&gt; CLIENT_SECRET, :code =&gt; session_code}, :accept =&gt; :json) session[:access_token] = JSON.parse(result)['access_token'] redirect '/' end  Much of the code should look familiar. For example, we're still using RestClient.get to call out to the GitHub API, and we're still passing our results to be rendered in an ERB template (this time, it's called advanced.erb). Also, we now have the authenticated? method which checks if the user is already authenticated. If not, the authenticate! method is called, which performs the OAuth flow and updates the session with the granted token and scopes. Next, create a file in views called advanced.erb, and paste this markup into it: &lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Well, well, well, &lt;%= login %&gt;!&lt;/p&gt; &lt;p&gt; &lt;% if !email.empty? %&gt; It looks like your public email address is &lt;%= email %&gt;. &lt;% else %&gt; It looks like you don't have a public email. That's cool. &lt;% end %&gt; &lt;/p&gt; &lt;p&gt; &lt;% if defined? private_emails %&gt; With your permission, we were also able to dig up your private email addresses: &lt;%= private_emails.map{ |private_email_address| private_email_address[\"email\"] }.join(', ') %&gt; &lt;% else %&gt; Also, you're a bit secretive about your private email addresses. &lt;% end %&gt; &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;  From the command line, call ruby advanced_server.rb, which starts up your server on port 4567 -- the same port we used when we had a simple Sinatra app. When you navigate to http://localhost:4567, the app calls authenticate! which redirects you to /callback. /callback then sends us back to /, and since we've been authenticated, renders advanced.erb. We could completely simplify this roundtrip routing by simply changing our callback URL in GitHub to /. But, since both server.rb and advanced.rb are relying on the same callback URL, we've got to do a little bit of wonkiness to make it work. Also, if we had never authorized this application to access our GitHub data, we would've seen the same confirmation dialog from earlier pop-up and warn us. If you'd like, you can play around with yet another Sinatra-GitHub auth example available as a separate project."
  },
  
  
  {
    "title": "Best practices for integrators",
    
    "url": "/guides/best-practices-for-integrators/",
    "body": " Best practices for integrators Interested in integrating with the GitHub platform? You're in good company. This guide will help you build an app that provides the best experience for your users and ensure that it's reliably interacting with the API.  Secure payloads delivered from GitHub Favor asynchronous work over synchronous Use appropriate HTTP status codes when responding to GitHub Provide as much information as possible to the user Follow any redirects that the API sends you Don't manually parse URLs Dealing with rate limits Dealing with abuse rate limits Dealing with API errors   Secure payloads delivered from GitHub It's very important that you secure the payloads sent from GitHub. Although no personal information (like passwords) is ever transmitted in a payload, leaking any information is not good. Some information that might be sensitive include committer email address or the names of private repositories. There are three steps you can take to secure receipt of payloads delivered by GitHub:  Ensure that your receiving server is on an HTTPS connection. By default, GitHub will verify SSL certificates when delivering payloads. You can whitelist the IP address we use when delivering hooks to your server. To ensure that you're always checking the right IP address, you can use the /meta endpoint to find the address we use. Provide a secret token to ensure payloads are definitely coming from GitHub. By enforcing a secret token, you're ensuring that any data received by your server is absolutely coming from GitHub. Ideally, you should provide a different secret token per user of your service. That way, if one token is compromised, no other user would be affected.   Favor asynchronous work over synchronous GitHub expects that integrations respond within thirty seconds of receiving the webhook payload. If your service takes longer than that to complete, then GitHub terminates the connection and the payload is lost. Since it's impossible to predict how fast your service will complete, you should do all of \"the real work\" in a background job. Resque (for Ruby), RQ (for Python), or RabbitMQ (for Java) are examples of libraries that can handle queuing and processing of background jobs. Note that even with a background job running, GitHub still expects your server to respond within thirty seconds. Your server simply needs to acknowledge that it received the payload by sending some sort of response. It's critical that your service to performs any validations on a payload as soon as possible, so that you can accurately report whether your server will continue with the request or not.  Use appropriate HTTP status codes when responding to GitHub Every webhook has its own \"Recent Deliveries\" section, which lists whether a deployment was successful or not.  You should make use of proper HTTP status codes in order to inform users. You can use codes like 201 or 202 to acknowledge receipt of payload that won't be processed (for example, a payload delivered by a branch that's not the default). Reserve the 500 error code for catastrophic failures.  Provide as much information as possible to the user Users can dig into the server responses you send back to GitHub. Ensure that your messages are clear and informative.   Follow any redirects that the API sends you GitHub is explicit in telling you when a resource has moved by providing a redirect status code. You should follow these redirections. Every redirect response sets the Location header with the new URI to go to. If you receive a redirect, it's best to update your code to follow the new URI, in case you're requesting a deprecated path that we might remove. We've provided a list of HTTP status codes to watch out for when designing your app to follow redirects.  Don't manually parse URLs Often, API responses contain data in the form of URLs. For example, when requesting a repository, we'll send a key called clone_url with a URL you can use to clone the repository. For the stability of your app, you shouldn't try to parse this data or try to guess and construct the format of future URLs. Your app is liable to break if we decide to change the URL. For example, when working with paginated results, it's often tempting to construct URLs that append ?page=&lt;number&gt; to the end. Avoid that temptation. Our guide on pagination offers some safe tips on dependably following paginated results.  Dealing with rate limits The GitHub API rate limit ensures that the API is fast and available for everyone. If you hit a rate limit, it's expected that you back off from making requests and try again later when you're permitted to do so. Failure to do so may result in the banning of your app. You can always check your rate limit status at any time. Checking your rate limit incurs no cost against your rate limit.  Dealing with abuse rate limits Abuse rate limits are another way we ensure the API's availability. To avoid hitting this limit, you should ensure your application follows the guidelines below.  Make authenticated requests, or use your application's client ID and secret. Unauthenticated requests are subject to more aggressive abuse rate limiting. Make requests for a single user or client ID serially. Do not make requests for a single user or client ID concurrently. If you're making a large number of POST, PATCH, PUT, or DELETE requests for a single user or client ID, wait at least one second between each request. Requests that create content which triggers notifications, such as issues, comments and pull requests, may be further limited. Please create this content at a reasonable pace to avoid further limiting. When you have been limited, wait the number of seconds specified in the Retry-After response header.  We reserve the right to change these guidelines as needed to ensure availability.  Dealing with API errors Although your code would never introduce a bug, you may find that you've encountered successive errors when trying to access the API. Rather than ignore repeated 4xx and 5xx status codes, you should ensure that you're correctly interacting with the API. For example, if an endpoint requests a string and you're passing it a numeric value, you're going to receive a 5xx validation error, and your call won't succeed. Similarly, attempting to access an unauthorized or nonexistent endpoint will result in a 4xx error. Intentionally ignoring repeated validation errors may result in the suspension of your app for abuse."
  },
  
  
  {
    "title": "Building a CI server",
    
    "url": "/guides/building-a-ci-server/",
    "body": " Building a CI server  Writing your server Working with statuses Conclusion  The Status API is responsible for tying together commits with a testing service, so that every push you make can be tested and represented in a GitHub pull request. This guide will use that API to demonstrate a setup that you can use. In our scenario, we will:  Run our CI suite when a Pull Request is opened (we'll set the CI status to pending). When the CI is finished, we'll set the Pull Request's status accordingly.  Our CI system and host server will be figments of our imagination. They could be Travis, Jenkins, or something else entirely. The crux of this guide will be setting up and configuring the server managing the communication. If you haven't already, be sure to download ngrok, and learn how to use it. We find it to be a very useful tool for exposing local connections. Note: you can download the complete source code for this project from the platform-samples repo.  Writing your server We'll write a quick Sinatra app to prove that our local connections are working. Let's start with this: require 'sinatra' require 'json' post '/event_handler' do payload = JSON.parse(params[:payload]) \"Well, it worked!\" end  (If you're unfamiliar with how Sinatra works, we recommend reading the Sinatra guide.) Start this server up. By default, Sinatra starts on port 4567, so you'll want to configure ngrok to start listening for that, too. In order for this server to work, we'll need to set a repository up with a webhook. The webhook should be configured to fire whenever a Pull Request is created, or merged. Go ahead and create a repository you're comfortable playing around in. Might we suggest @octocat's Spoon/Knife repository? After that, you'll create a new webhook in your repository, feeding it the URL that ngrok gave you, and choosing application/x-www-form-urlencoded as the content type:  Click Update webhook. You should see a body response of Well, it worked!. Great! Click on Let me select individual events, and select the following:  Status Pull Request  These are the events GitHub will send to our server whenever the relevant action occurs. Let's update our server to just handle the Pull Request scenario right now: post '/event_handler' do @payload = JSON.parse(params[:payload]) case request.env['HTTP_X_GITHUB_EVENT'] when \"pull_request\" if @payload[\"action\"] == \"opened\" process_pull_request(@payload[\"pull_request\"]) end end end helpers do def process_pull_request(pull_request) puts \"It's #{pull_request['title']}\" end end  What's going on? Every event that GitHub sends out attached a X-GitHub-Event HTTP header. We'll only care about the PR events for now. From there, we'll take the payload of information, and return the title field. In an ideal scenario, our server would be concerned with every time a pull request is updated, not just when it's opened. That would make sure that every new push passes the CI tests. But for this demo, we'll just worry about when it's opened. To test out this proof-of-concept, make some changes in a branch in your test repository, and open a pull request. Your server should respond accordingly!  Working with statuses With our server in place, we're ready to start our first requirement, which is setting (and updating) CI statuses. Note that at any time you update your server, you can click Redeliver to send the same payload. There's no need to make a new pull request every time you make a change! Since we're interacting with the GitHub API, we'll use Octokit.rb to manage our interactions. We'll configure that client with a personal access token: # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below ACCESS_TOKEN = ENV['MY_PERSONAL_TOKEN'] before do @client ||= Octokit::Client.new(:access_token =&gt; ACCESS_TOKEN) end  After that, we'll just need to update the pull request on GitHub to make clear that we're processing on the CI: def process_pull_request(pull_request) puts \"Processing pull request...\" @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'pending') end  We're doing three very basic things here:  we're looking up the full name of the repository we're looking up the last SHA of the pull request we're setting the status to \"pending\"  That's it! From here, you can run whatever process you need to in order to execute your test suite. Maybe you're going to pass off your code to Jenkins, or call on another web service via its API, like Travis. After that, you'd be sure to update the status once more. In our example, we'll just set it to \"success\": def process_pull_request(pull_request) @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'pending') sleep 2 # do busy work... @client.create_status(pull_request['base']['repo']['full_name'], pull_request['head']['sha'], 'success') puts \"Pull request processed!\" end   Conclusion At GitHub, we've used a version of Janky to manage our CI for years. The basic flow is essentially the exact same as the server we've built above. At GitHub, we:  Fire to Jenkins when a pull request is created or updated (via Janky) Wait for a response on the state of the CI If the code is green, we merge the pull request  All of this communication is funneled back to our chat rooms. You don't need to build your own CI setup to use this example. You can always rely on third-party services."
  },
  
  
  {
    "title": "Delivering deployments",
    
    "url": "/guides/delivering-deployments/",
    "body": " Delivering deployments  Writing your server Working with deployments Conclusion  The Deployments API provides your projects hosted on GitHub with the capability to launch them on a server that you own. Combined with the Status API, you'll be able to coordinate your deployments the moment your code lands on master. This guide will use that API to demonstrate a setup that you can use. In our scenario, we will:  Merge a Pull Request When the CI is finished, we'll set the Pull Request's status accordingly. When the Pull Request is merged, we'll run our deployment to our server.  Our CI system and host server will be figments of our imagination. They could be Heroku, Amazon, or something else entirely. The crux of this guide will be setting up and configuring the server managing the communication. If you haven't already, be sure to download ngrok, and learn how to use it. We find it to be a very useful tool for exposing local connections. Note: you can download the complete source code for this project from the platform-samples repo.  Writing your server We'll write a quick Sinatra app to prove that our local connections are working. Let's start with this: require 'sinatra' require 'json' post '/event_handler' do payload = JSON.parse(params[:payload]) \"Well, it worked!\" end  (If you're unfamiliar with how Sinatra works, we recommend reading the Sinatra guide.) Start this server up. By default, Sinatra starts on port 4567, so you'll want to configure ngrok to start listening for that, too. In order for this server to work, we'll need to set a repository up with a webhook. The webhook should be configured to fire whenever a Pull Request is created, or merged. Go ahead and create a repository you're comfortable playing around in. Might we suggest @octocat's Spoon/Knife repository? After that, you'll create a new webhook in your repository, feeding it the URL that ngrok gave you, and choosing application/x-www-form-urlencoded as the content type:  Click Update webhook. You should see a body response of Well, it worked!. Great! Click on Let me select individual events., and select the following:  Deployment Deployment status Pull Request  These are the events GitHub will send to our server whenever the relevant action occurs. We'll configure our server to just handle when Pull Requests are merged right now: post '/event_handler' do @payload = JSON.parse(params[:payload]) case request.env['HTTP_X_GITHUB_EVENT'] when \"pull_request\" if @payload[\"action\"] == \"closed\" &amp;&amp; @payload[\"pull_request\"][\"merged\"] puts \"A pull request was merged! A deployment should start now...\" end end end  What's going on? Every event that GitHub sends out attached a X-GitHub-Event HTTP header. We'll only care about the PR events for now. When a pull request is merged (its state is closed, and merged is true), we'll kick off a deployment. To test out this proof-of-concept, make some changes in a branch in your test repository, open a pull request, and merge it. Your server should respond accordingly!  Working with deployments With our server in place, the code being reviewed, and our pull request merged, we want our project to be deployed. We'll start by modifying our event listener to process pull requests when they're merged, and start paying attention to deployments: when \"pull_request\" if @payload[\"action\"] == \"closed\" &amp;&amp; @payload[\"pull_request\"][\"merged\"] start_deployment(@payload[\"pull_request\"]) end when \"deployment\" process_deployment(@payload) when \"deployment_status\" update_deployment_status end  Based on the information from the pull request, we'll start by filling out the start_deployment method: def start_deployment(pull_request) user = pull_request['user']['login'] payload = JSON.generate(:environment =&gt; 'production', :deploy_user =&gt; user) @client.create_deployment(pull_request['head']['repo']['full_name'], pull_request['head']['sha'], {:payload =&gt; payload, :description =&gt; \"Deploying my sweet branch\"}) end  Deployments can have some metadata attached to them, in the form of a payload and a description. Although these values are optional, it's helpful to use for logging and representing information. When a new deployment is created, a completely separate event is trigged. That's why we have a new switch case in the event handler for deployment. You can use this information to be notified when a deployment has been triggered. Deployments can take a rather long time, so we'll want to listen for various events, such as when the deployment was created, and what state it's in. Let's simulate a deployment that does some work, and notice the effect it has on the output. First, let's complete our process_deployment method: def process_deployment payload = JSON.parse(@payload['payload']) # you can send this information to your chat room, monitor, pager, e.t.c. puts \"Processing '#{@payload['description']}' for #{payload['deploy_user']} to #{payload['environment']}\" sleep 2 # simulate work @client.create_deployment_status(\"repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}\", 'pending') sleep 2 # simulate work @client.create_deployment_status(\"repos/#{@payload['repository']['full_name']}/deployments/#{@payload['id']}\", 'success') end  Finally, we'll simulate storing the status information as console output: def update_deployment_status puts \"Deployment status for #{@payload['id']} is #{@payload['state']}\" end  Let's break down what's going on. A new deployment is created by start_deployment, which triggers the deployment event. From there, we call process_deployment to simulate work that's going on. During that processing, we also make a call to create_deployment_status, which lets a receiver know what's going on, as we switch the status to pending. After the deployment is finished, we set the status to success. You'll notice that this pattern is the exact same as when we you your CI statuses.  Conclusion At GitHub, we've used a version of Heaven to manage our deployments for years. The basic flow is essentially the exact same as the server we've built above. At GitHub, we:  Wait for a response on the state of the CI If the code is green, we merge the pull request Heaven takes the merged code, and deploys it to our production and staging servers In the meantime, Heaven also notifies everyone about the build, via Hubot sitting in our chat rooms  That's it! You don't need to build your own deployment setup to use this example. You can always rely on third-party services."
  },
  
  
  {
    "title": "Discovering resources for a user",
    
    "url": "/guides/discovering-resources-for-a-user/",
    "body": " Discovering resources for a user  Getting started Discover the repositories that your app can access for a user Discover the organizations that your app can access for a user  When making authenticated requests to the GitHub API, applications often need to fetch the current user's repositories and organizations. In this guide, we'll explain how to reliably discover those resources. To interact with the GitHub API, we'll be using Octokit.rb. You can find the complete source code for this project in the platform-samples repository.  Getting started If you haven't already, you should read the \"Basics of Authentication\" guide before working through the examples below. The examples below assume that you have registered an OAuth application and that your application has an OAuth token for a user.  Discover the repositories that your app can access for a user In addition to having their own personal repositories, a user may be a collaborator on repositories owned by other users and organizations. Collectively, these are the repositories where the user has privileged access: either it's a private repository where the user has read or write access, or it's a public repository where the user has write access. OAuth scopes and organization application policies determine which of those repositories your app can access for a user. Use the workflow below to discover those repositories. As always, first we'll require GitHub's Octokit.rb Ruby library. Then we'll configure Octokit.rb to automatically handle pagination for us. require 'octokit' Octokit.auto_paginate = true  Next, we'll pass in our application's OAuth token for a given user: # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below. client = Octokit::Client.new :access_token =&gt; ENV[\"OAUTH_ACCESS_TOKEN\"]  Then, we're ready to fetch the repositories that our application can access for the user: client.repositories.each do |repository| full_name = repository[:full_name] has_push_access = repository[:permissions][:push] access_type = if has_push_access \"write\" else \"read-only\" end puts \"User has #{access_type} access to #{full_name}.\" end   Discover the organizations that your app can access for a user Applications can perform all sorts of organization-related tasks for a user. To perform these tasks, the app needs an OAuth authorization with sufficient permission. For example, the read:org scope allows you to list teams, and the user scope lets you publicize the user’s organization membership. Once a user has granted one or more of these scopes to your app, you're ready to fetch the user’s organizations. Just as we did when discovering repositories above, we'll start by requiring GitHub's Octokit.rb Ruby library and configuring it to take care of pagination for us: require 'octokit' Octokit.auto_paginate = true  Next, we'll pass in our application's OAuth token for a given user to initialize our API client: # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below. client = Octokit::Client.new :access_token =&gt; ENV[\"OAUTH_ACCESS_TOKEN\"]  Then, we can list the organizations that our application can access for the user: client.organizations.each do |organization| puts \"User belongs to the #{organization[:login]} organization.\" end   Don’t rely on public organizations If you've read the docs from cover to cover, you may have noticed an API method for listing a user's public organization memberships. Most applications should avoid this API method. This method only returns the user's public organization memberships, not their private organization memberships. As an application, you typically want all of the user's organizations (public and private) that your app is authorized to access. The workflow above will give you exactly that."
  },
  
  
  {
    "title": "Getting Started",
    
    "url": "/guides/getting-started/",
    "body": " Getting Started  Overview Authentication Repositories Issues Conditional requests  Let's walk through core API concepts as we tackle some everyday use cases.  Overview Most applications will use an existing wrapper library in the language of your choice, but it's important to familiarize yourself with the underlying API HTTP methods first. There's no easier way to kick the tires than through cURL.  Hello World Let's start by testing our setup. Open up a command prompt and enter the following command:  curl https://api.github.com/zen Keep it logically awesome.  The response will be a random selection from our design philosophies. Next, let's GET Chris Wanstrath's GitHub profile:  # GET /users/defunkt curl https://api.github.com/users/defunkt {  \"login\": \"defunkt\",  \"id\": 2,  \"url\": \"https://api.github.com/users/defunkt\",  \"html_url\": \"https://github.com/defunkt\",  ... }  Mmmmm, tastes like JSON. Let's add the -i flag to include headers:  curl -i https://api.github.com/users/defunkt HTTP/1.1 200 OK Server: GitHub.com Date: Sun, 11 Nov 2012 18:43:28 GMT Content-Type: application/json; charset=utf-8 Connection: keep-alive Status: 200 OK ETag: \"bfd85cbf23ac0b0c8a29bee02e7117c6\" X-RateLimit-Limit: 60 X-RateLimit-Remaining: 57 X-RateLimit-Reset: 1352660008 X-GitHub-Media-Type: github.v3 Vary: Accept Cache-Control: public, max-age=60, s-maxage=60 X-Content-Type-Options: nosniff Content-Length: 692 Last-Modified: Tue, 30 Oct 2012 18:58:42 GMT {  \"login\": \"defunkt\",  \"id\": 2,  \"url\": \"https://api.github.com/users/defunkt\",  \"html_url\": \"https://github.com/defunkt\",  ... }  There are a few interesting bits in the response headers. As expected, the Content-Type is application/json. Any headers beginning with X- are custom headers, and are not included in the HTTP spec. Let's take a look at a few of them:   X-GitHub-Media-Type has a value of github.v3. This lets us know the media type for the response. Media types have helped us version our output in API v3. We'll talk more about that later. Take note of the X-RateLimit-Limit and X-RateLimit-Remaining headers. This pair of headers indicate how many requests a client can make in a rolling time period (typically an hour) and how many of those requests the client has already spent.   Authentication Unauthenticated clients can make 60 requests per hour. To get more, we'll need to authenticate. In fact, doing anything interesting with the GitHub API requires authentication.  Basic The easiest way to authenticate with the GitHub API is by simply using your GitHub username and password via Basic Authentication.  curl -i -u your_username https://api.github.com/users/defunkt Enter host password for user your_username:  The -u flag sets the username, and cURL will prompt you for the password. You can use -u \"username:password\" to avoid the prompt, but this leaves your password in shell history and isn't recommended. When authenticating, you should see your rate limit bumped to 5,000 requests an hour, as indicated in the X-RateLimit-Limit header. In addition to just getting more calls per hour, authentication is the key to reading and writing private information via the API.  Two-factor authentication If you have two-factor authentication enabled, the API will return a 401 Unauthorized error code for the above request (and every other API request):  curl -i -u your_username https://api.github.com/users/defunkt Enter host password for user your_username: HTTP/1.1 401 Unauthorized X-GitHub-OTP: required; :2fa-type {  \"message\": \"Must specify two-factor authentication OTP code.\",  \"documentation_url\": \"https://developer.github.com/v3/auth#working-with-two-factor-authentication\" }  The easiest way to get around that error is to create an OAuth token and use OAuth authentication instead of Basic Authentication. See the OAuth section below for more information.  Get your own user profile When properly authenticated, you can take advantage of the permissions associated with your GitHub account. For example, try getting your own user profile:  curl -i -u your_username https://api.github.com/user {  ...  \"plan\": {  \"space\": 2516582,  \"collaborators\": 10,  \"private_repos\": 20,  \"name\": \"medium\"  }  ... }  This time, in addition to the same set of public information we retrieved for @defunkt earlier, you should also see the non-public information for your user profile. For example, you'll see a plan object in the response which gives details about the GitHub plan for the account.  OAuth While convenient, Basic Authentication isn't ideal because you shouldn't give your GitHub username and password to anyone. Applications that need to read or write private information using the API on behalf of another user should use OAuth. Instead of usernames and passwords, OAuth uses tokens. Tokens provide two big features:   Revokable access: users can revoke authorization to third party apps at any time  Limited access: users can review the specific access that a token will provide before authorizing a third party app  Normally, tokens are created via a web flow. An application sends users to GitHub to log in. GitHub then presents a dialog indicating the name of the app, as well as the level of access the app has once it's authorized by the user. After a user authorizes access, GitHub redirects the user back to the application:  However, you don't need to set up the entire web flow to begin working with OAuth tokens. An easier way to get a token is to create a personal access token via your Personal access tokens settings page:  Also, the Authorizations API makes it simple to use Basic Authentication to create an OAuth token. Try pasting and running the following command:  curl -i -u your_username -d '{\"scopes\": [\"repo\", \"user\"], \"note\": \"getting-started\"}' \\  https://api.github.com/authorizations HTTP/1.1 201 Created Location: https://api.github.com/authorizations/2 Content-Length: 384 {  \"scopes\": [  \"repo\",  \"user\"  ],  \"token\": \"5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4\",  \"updated_at\": \"2012-11-14T14:04:24Z\",  \"url\": \"https://api.github.com/authorizations/2\",  \"app\": {  \"url\": \"https://developer.github.com/v3/oauth/#oauth-authorizations-api\",  \"name\": \"GitHub API\"  },  \"created_at\": \"2012-11-14T14:04:24Z\",  \"note_url\": null,  \"id\": 2,  \"note\": \"getting-started\" }  There's a lot going on in this one little call, so let's break it down. First, the -d flag indicates we're doing a POST, using the application/x-www-form-urlencoded content type (as opposed to GET). All POST requests to the GitHub API should be in JSON. Next, let's look at the scopes we're sending over in this call. When creating a new token, we include an optional array of scopes, or access levels, that indicate what information this token can access. In this case, we're setting up the token with repo access, which grants access to read and write to public and private repositories, and user scope, which grants read and write access to public and private user profile data. See the scopes docs for a full list of scopes. You should only request scopes that your application actually needs, in order to not frighten users with potentially invasive actions. The 201 status code tells us that the call was successful, and the JSON returned contains the details of our new OAuth token. If you have two-factor authentication enabled, the API will return the previously described 401 Unauthorized error code for the above request. You can get around that error by providing a 2FA OTP code in the X-GitHub-OTP request header:  curl -i -u your_username -H \"X-GitHub-OTP: your_2fa_OTP_code\" \\ -d '{\"scopes\": [\"repo\", \"user\"], \"note\": \"getting-started\"}' \\ https://api.github.com/authorizations  If you enabled 2FA with a mobile application, go ahead and get an OTP code from your one-time password application on your phone. If you enabled 2FA with text messages, you'll receive an SMS with your OTP code after making a request to this endpoint. Now, we can use the forty character token instead of a username and password in the rest of our examples. Let's grab our own user info again, using OAuth this time:  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\ https://api.github.com/user  Treat OAuth tokens like passwords! Don't share them with other users or store them in insecure places. The tokens in these examples are fake and the names have been changed to protect the innocent. Now that we've got the hang of making authenticated calls, let's move along to the Repositories API.  Repositories Almost any meaningful use of the GitHub API will involve some level of Repository information. We can GET repository details in the same way we fetched user details earlier:  curl -i https://api.github.com/repos/twbs/bootstrap  In the same way, we can view repositories for the authenticated user:  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\ https://api.github.com/user/repos  Or, we can list repositories for another user:  curl -i https://api.github.com/users/technoweenie/repos  Or, we can list repositories for an organization:  curl -i https://api.github.com/orgs/mozilla/repos  The information returned from these calls will depend on how we authenticate:  Using Basic Authentication, the response includes all repositories the the user has access to see on github.com. Using OAuth, private repositories are only returned if the OAuth token contains the repo scope.  As the docs indicate, these methods take a type parameter that can filter the repositories returned based on what type of access the user has for the repository. In this way, we can fetch only directly-owned repositories, organization repositories, or repositories the user collaborates on via a team.  curl -i \"https://api.github.com/users/technoweenie/repos?type=owner\"  In this example, we grab only those repositories that technoweenie owns, not the ones on which he collaborates. Note the quoted URL above. Depending on your shell setup, cURL sometimes requires a quoted URL or else it ignores the query string.  Create a repository Fetching information for existing repositories is a common use case, but the GitHub API supports creating new repositories as well. To create a repository, we need to POST some JSON containing the details and configuration options.  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\ -d '{ \\ \"name\": \"blog\", \\ \"auto_init\": true, \\ \"private\": true, \\ \"gitignore_template\": \"nanoc\" \\ }' \\ https://api.github.com/user/repos  In this minimal example, we create a new repository for our blog (to be served on GitHub Pages, perhaps). Though the blog will be public, we've made the repository private. In this single step, we'll also initialize it with a README and a nanoc-flavored [.gitignore template]gitignore templates. The resulting repository will be found at https://github.com/&lt;your_username&gt;/blog. To create a repository under an organization for which you're an owner, just change the API method from /user/repos to /orgs/&lt;org_name&gt;/repos. Next, let's fetch our newly created repository:  curl -i https://api.github.com/repos/pengwynn/blog HTTP/1.1 404 Not Found {  \"message\": \"Not Found\" }  Oh noes! Where did it go? Since we created the repository as private, we need to authenticate in order to see it. If you're a grizzled HTTP user, you might expect a 403 instead. Since we don't want to leak information about private repositories, the GitHub API returns a 404 in this case, as if to say \"we can neither confirm nor deny the existence of this repository.\"  Issues The UI for Issues on GitHub aims to provide 'just enough' workflow while staying out of your way. With the GitHub Issues API, you can pull data out or create issues from other tools to create a workflow that works for your team. Just like github.com, the API provides a few methods to view issues for the authenticated user. To see all your issues, call GET /issues:  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\ https://api.github.com/issues  To get only the issues under one of your GitHub organizations, call GET /orgs/&lt;org&gt;/issues:  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\ https://api.github.com/orgs/rails/issues  We can also get all the issues under a single repository:  curl -i https://api.github.com/repos/rails/rails/issues   Pagination A project the size of Rails has thousands of issues. We'll need to paginate, making multiple API calls to get the data. Let's repeat that last call, this time taking note of the response headers:  curl -i https://api.github.com/repos/rails/rails/issues HTTP/1.1 200 OK ... Link: &lt;https://api.github.com/repositories/8514/issues?page=2&gt;; rel=\"next\", &lt;https://api.github.com/repositories/8514/issues?page=30&gt;; rel=\"last\" ...  The Link header provides a way for a response to link to external resources, in this case additional pages of data. Since our call found more than thirty issues (the default page size), the API tells us where we can find the next page and the last page of results.  Creating an issue Now that we've seen how to paginate lists of issues, let's create an issue from the API. To create an issue, we need to be authenticated, so we'll pass an OAuth token in the header. Also, we'll pass the title, body, and labels in the JSON body to the /issues path underneath the repository in which we want to create the issue:  curl -i -H 'Authorization: token 5199831f4dd3b79e7c5b7e0ebe75d67aa66e79d4' \\  -d '{ \\  \"title\": \"New logo\", \\  \"body\": \"We should have one\", \\  \"labels\": [\"design\"] \\  }' \\  https://api.github.com/repos/pengwynn/api-sandbox/issues HTTP/1.1 201 Created Location: https://api.github.com/repos/pengwynn/api-sandbox/issues/17 X-RateLimit-Limit: 5000 {  \"pull_request\": {  \"patch_url\": null,  \"html_url\": null,  \"diff_url\": null  },  \"created_at\": \"2012-11-14T15:25:33Z\",  \"comments\": 0,  \"milestone\": null,  \"title\": \"New logo\",  \"body\": \"We should have one\",  \"user\": {  \"login\": \"pengwynn\",  \"gravatar_id\": \"7e19cd5486b5d6dc1ef90e671ba52ae0\",  \"avatar_url\": \"https://secure.gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",  \"id\": 865,  \"url\": \"https://api.github.com/users/pengwynn\"  },  \"closed_at\": null,  \"updated_at\": \"2012-11-14T15:25:33Z\",  \"number\": 17,  \"closed_by\": null,  \"html_url\": \"https://github.com/pengwynn/api-sandbox/issues/17\",  \"labels\": [  {  \"color\": \"ededed\",  \"name\": \"design\",  \"url\": \"https://api.github.com/repos/pengwynn/api-sandbox/labels/design\"  }  ],  \"id\": 8356941,  \"assignee\": null,  \"state\": \"open\",  \"url\": \"https://api.github.com/repos/pengwynn/api-sandbox/issues/17\" }  The response gives us a couple of pointers to the newly created issue, both in the Location response header and the url field of the JSON response.  Conditional requests A big part of being a good API citizen is respecting rate limits by caching information that hasn't changed. The API supports conditional requests and helps you do the right thing. Consider the first call we made to get defunkt's profile:  curl -i https://api.github.com/users/defunkt HTTP/1.1 200 OK ETag: \"bfd85cbf23ac0b0c8a29bee02e7117c6\"  In addition to the JSON body, take note of the HTTP status code of 200 and the ETag header. The ETag is a fingerprint of the response. If we pass that on subsequent calls, we can tell the API to give us the resource again, only if it has changed:  curl -i -H 'If-None-Match: \"bfd85cbf23ac0b0c8a29bee02e7117c6\"' \\  https://api.github.com/users/defunkt HTTP/1.1 304 Not Modified  The 304 status indicates that the resource hasn't changed since the last time we asked for it and the response will contain no body. As a bonus, 304 responses don't count against your rate limit. Woot! Now you know the basics of the GitHub API!  Basic &amp; OAuth authentication Fetching and creating repositories and issues Conditional requests  Keep learning with the next API guide Basics of Authentication!"
  },
  
  
  {
    "title": "Development Guides",
    
    "url": "/guides/index/",
    "body": " Development Guides This section of the documentation is intended to get you up-and-running with real-world GitHub API applications. We'll cover everything you need to know, from authentication, to manipulating results, to combining results with other services. Every tutorial here will have a project, and every project will be stored and documented in our public platform-samples repository. Feel free to fork, clone, and improve these guides. "
  },
  
  
  {
    "title": "Managing deploy keys",
    
    "url": "/guides/managing-deploy-keys/",
    "body": " Managing Deploy Keys  SSH agent forwarding HTTPS cloning with OAuth tokens Deploy keys Machine users  There are four ways to manage SSH keys on your servers when automating deployment scripts:  SSH agent forwarding HTTPS with OAuth tokens Deploy keys Machine users  This guide will help you decide what strategy is best for you.  SSH agent forwarding In many cases, especially in the beginning of a project, SSH agent forwarding is the quickest and simplest method to use. Agent forwarding uses the same SSH keys that your local development computer uses.  Pros  You do not have to generate or keep track of any new keys. There is no key management; users have the same permissions on the server that they do locally. No keys are stored on the server, so in case the server is compromised, you don't need to hunt down and remove the compromised keys.   Cons  Users must SSH in to deploy; automated deploy processes can't be used. SSH agent forwarding can be troublesome to run for Windows users.   Setup  Turn on agent forwarding locally. See our guide on SSH agent forwarding for more information. Set your deploy scripts to use agent forwarding. For example, on a bash script, enabling agent forwarding would look something like this: ssh -A serverA 'bash -s' &lt; deploy.sh    HTTPS cloning with OAuth tokens If you don't want to use SSH keys, you can use HTTPS with OAuth tokens.  Pros  Anyone with access to the server can deploy the repository. Users don't have to change their local SSH settings. Multiple tokens (one for each user) are not needed; one token per server is enough. A token can be revoked at any time, turning it essentially into a one-use password. Generating new tokens can be easily scripted using the OAuth API    Cons  You must make sure that you configure your token with the correct access scopes. Tokens are essentially passwords, and must be protected the same way.   Setup See our guide on Git automation with tokens.  Deploy keys A deploy key is an SSH key that is stored on your server and grants access to a single GitHub repository. This key is attached directly to the repository instead of to a personal user account.  Pros  Anyone with access to the repository and server has the ability to deploy the project. Users don't have to change their local SSH settings. Deploy keys can read and write by default, but can be made read-only.   Cons  Deploy keys only grant access to a single repository. More complex projects may have many repositories to pull to the same server. Deploy keys are usually not protected by a passphrase, making the key easily accessible if the server is compromised.   Setup   Run the ssh-keygen procedure on your server. In the top right corner of any GitHub page, click your profile photo.   On your profile page, click the Repositories tab, then click the name of your repository.   In your repository's right sidebar, click Settings.   In the sidebar, click Deploy Keys.   Click Add deploy key. Paste your public key in and submit.     Machine users If your server needs to access multiple repositories, you can choose to create a new GitHub account and attach an SSH key that will be used exclusively for automation. Since this GitHub account won't be used by a human, it's called a machine user. You can then add the machine user as collaborator or add the machine user to a team with access to the repositories it needs to manipulate. NOTE: Adding a machine user as a collaborator always grants read/write access. Adding a machine user to a team grants the permissions of the team.  Tip: Our terms of service do mention that 'Accounts registered by \"bots\" or other automated methods are not permitted.' and that 'One person or legal entity may not maintain more than one free account.' But don't fear, we won't send rabid lawyers out to hunt you down if you create a single machine user for your organization's deploy scripts. Creating a single machine user for your project or organization is totally cool.   Pros  Anyone with access to the repository and server has the ability to deploy the project. No (human) users need to change their local SSH settings. Multiple keys are not needed; one per server is adequate.   Cons  Only organizations have access to create teams; therefore only organizations can use them to restrict machine users to read-only access. Personal repositories always grant collaborators read/write access. Machine user keys, like deploy keys, are usually not protected by a passphrase.   Setup   Run the ssh-keygen procedure on your server and attach the public key to the machine user account. Give that account access to the repositories it will need to access. You can do this by adding the account as collaborator or adding it to a team in an organization. "
  },
  
  
  {
    "title": "Rendering Data as Graphs",
    
    "url": "/guides/rendering-data-as-graphs/",
    "body": " Rendering Data as Graphs  Setting up an OAuth application Fetching repository information Visualizing language counts Combining different API calls  In this guide, we're going to use the API to fetch information about repositories that we own, and the programming languages that make them up. Then, we'll visualize that information in a couple of different ways using the D3.js library. To interact with the GitHub API, we'll be using the excellent Ruby library, Octokit. If you haven't already, you should read the \"Basics of Authentication\" guide before starting this example. You can find the complete source code for this project in the platform-samples repository. Let's jump right in!  Setting up an OAuth application First, register a new application on GitHub. Set the main and callback URLs to http://localhost:4567/. As before, we're going to handle authentication for the API by implementing a Rack middleware using sinatra-auth-github: require 'sinatra/auth/github' module Example class MyGraphApp &lt; Sinatra::Base # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below # if ENV['GITHUB_CLIENT_ID'] &amp;&amp; ENV['GITHUB_CLIENT_SECRET'] # CLIENT_ID = ENV['GITHUB_CLIENT_ID'] # CLIENT_SECRET = ENV['GITHUB_CLIENT_SECRET'] # end CLIENT_ID = ENV['GH_GRAPH_CLIENT_ID'] CLIENT_SECRET = ENV['GH_GRAPH_SECRET_ID'] enable :sessions set :github_options, { :scopes =&gt; \"repo\", :secret =&gt; CLIENT_SECRET, :client_id =&gt; CLIENT_ID, :callback_url =&gt; \"/\" } register Sinatra::Auth::Github get '/' do if !authenticated? authenticate! else access_token = github_user[\"token\"] end end end end  Set up a similar config.ru file as in the previous example: ENV['RACK_ENV'] ||= 'development' require \"rubygems\" require \"bundler/setup\" require File.expand_path(File.join(File.dirname(__FILE__), 'server')) run Example::MyGraphApp   Fetching repository information This time, in order to talk to the GitHub API, we're going to use the Octokit Ruby library. This is much easier than directly making a bunch of REST calls. Plus, Octokit was developed by a GitHubber, and is actively maintained, so you know it'll work. Authentication with the API via Octokit is easy. Just pass your login and token to the Octokit::Client constructor: if !authenticated? authenticate! else octokit_client = Octokit::Client.new(:login =&gt; github_user.login, :oauth_token =&gt; github_user.token) end  Let's do something interesting with the data about our repositories. We're going to see the different programming languages they use, and count which ones are used most often. To do that, we'll first need a list of our repositories from the API. With Octokit, that looks like this: repos = client.repositories  Next, we'll iterate over each repository, and count the language that GitHub associates with it: language_obj = {} repos.each do |repo| # sometimes language can be nil if repo.language if !language_obj[repo.language] language_obj[repo.language] = 1 else language_obj[repo.language] += 1 end end end languages.to_s  When you restart your server, your web page should display something that looks like this: {\"JavaScript\"=&gt;13, \"PHP\"=&gt;1, \"Perl\"=&gt;1, \"CoffeeScript\"=&gt;2, \"Python\"=&gt;1, \"Java\"=&gt;3, \"Ruby\"=&gt;3, \"Go\"=&gt;1, \"C++\"=&gt;1}  So far, so good, but not very human-friendly. A visualization would be great in helping us understand how these language counts are distributed. Let's feed our counts into D3 to get a neat bar graph representing the popularity of the languages we use.  Visualizing language counts D3.js, or just D3, is a comprehensive library for creating many kinds of charts, graphs, and interactive visualizations. Using D3 in detail is beyond the scope of this guide, but for a good introductory article, check out \"D3 for Mortals\". D3 is a JavaScript library, and likes working with data as arrays. So, let's convert our Ruby hash into a JSON array for use by JavaScript in the browser. languages = [] language_obj.each do |lang, count| languages.push :language =&gt; lang, :count =&gt; count end erb :lang_freq, :locals =&gt; { :languages =&gt; languages.to_json}  We're simply iterating over each key-value pair in our object and pushing them into a new array. The reason we didn't do this earlier is because we didn't want to iterate over our language_obj object while we were creating it. Now, lang_freq.erb is going to need some JavaScript to support rendering a bar graph. For now, you can just use the code provided here, and refer to the resources linked above if you want to learn more about how D3 works: &lt;!DOCTYPE html&gt; &lt;meta charset=\"utf-8\"&gt; &lt;html&gt; &lt;head&gt; &lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/d3/3.0.1/d3.v3.min.js\"&gt;&lt;/script&gt; &lt;style&gt; svg { padding: 20px; } rect { fill: #2d578b } text { fill: white; } text.yAxis { font-size: 12px; font-family: Helvetica, sans-serif; fill: black; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Check this sweet data out:&lt;/p&gt; &lt;div id=\"lang_freq\"&gt;&lt;/div&gt; &lt;/body&gt; &lt;script&gt; var data = &lt;%= languages %&gt;; var barWidth = 40; var width = (barWidth + 10) * data.length; var height = 300; var x = d3.scale.linear().domain([0, data.length]).range([0, width]); var y = d3.scale.linear().domain([0, d3.max(data, function(datum) { return datum.count; })]). rangeRound([0, height]); // add the canvas to the DOM var languageBars = d3.select(\"#lang_freq\"). append(\"svg:svg\"). attr(\"width\", width). attr(\"height\", height); languageBars.selectAll(\"rect\"). data(data). enter(). append(\"svg:rect\"). attr(\"x\", function(datum, index) { return x(index); }). attr(\"y\", function(datum) { return height - y(datum.count); }). attr(\"height\", function(datum) { return y(datum.count); }). attr(\"width\", barWidth); languageBars.selectAll(\"text\"). data(data). enter(). append(\"svg:text\"). attr(\"x\", function(datum, index) { return x(index) + barWidth; }). attr(\"y\", function(datum) { return height - y(datum.count); }). attr(\"dx\", -barWidth/2). attr(\"dy\", \"1.2em\"). attr(\"text-anchor\", \"middle\"). text(function(datum) { return datum.count;}); languageBars.selectAll(\"text.yAxis\"). data(data). enter().append(\"svg:text\"). attr(\"x\", function(datum, index) { return x(index) + barWidth; }). attr(\"y\", height). attr(\"dx\", -barWidth/2). attr(\"text-anchor\", \"middle\"). text(function(datum) { return datum.language;}). attr(\"transform\", \"translate(0, 18)\"). attr(\"class\", \"yAxis\"); &lt;/script&gt; &lt;/html&gt;  Phew! Again, don't worry about what most of this code is doing. The relevant part here is a line way at the top--var data = &lt;%= languages %&gt;;--which indicates that we're passing our previously created languages array into ERB for manipulation. As the \"D3 for Mortals\" guide suggests, this isn't necessarily the best use of D3. But it does serve to illustrate how you can use the library, along with Octokit, to make some really amazing things.  Combining different API calls Now it's time for a confession: the language attribute within repositories only identifies the \"primary\" language defined. That means that if you have a repository that combines several languages, the one with the most bytes of code is considered to be the primary language. Let's combine a few API calls to get a true representation of which language has the greatest number of bytes written across all our code. A treemap should be a great way to visualize the sizes of our coding languages used, rather than simply the count. We'll need to construct an array of objects that looks something like this: [ { \"name\": \"language1\", \"size\": 100}, { \"name\": \"language2\", \"size\": 23} ... ]  Since we already have a list of repositories above, let's inspect each one, and call the language listing API method: repos.each do |repo| repo_name = repo.name repo_langs = octokit_client.languages(\"#{github_user.login}/#{repo_name}\") end  From there, we'll cumulatively add each language found to a \"master list\": repo_langs.each do |lang, count| if !language_obj[lang] language_obj[lang] = count else language_obj[lang] += count end end  After that, we'll format the contents into a structure that D3 understands: language_obj.each do |lang, count| language_byte_count.push :name =&gt; \"#{lang} (#{count})\", :count =&gt; count end # some mandatory formatting for D3 language_bytes = [ :name =&gt; \"language_bytes\", :elements =&gt; language_byte_count]  (For more information on D3 tree map magic, check out this simple tutorial.) To wrap up, we pass this JSON information over to the same ERB template: erb :lang_freq, :locals =&gt; { :languages =&gt; languages.to_json, :language_byte_count =&gt; language_bytes.to_json}  Like before, here's a bunch of JavaScript that you can drop directly into your template: &lt;div id=\"byte_freq\"&gt;&lt;/div&gt; &lt;script&gt; var language_bytes = &lt;%= language_byte_count %&gt; var childrenFunction = function(d){return d.elements}; var sizeFunction = function(d){return d.count;}; var colorFunction = function(d){return Math.floor(Math.random()*20)}; var nameFunction = function(d){return d.name;}; var color = d3.scale.linear() .domain([0,10,15,20]) .range([\"grey\",\"green\",\"yellow\",\"red\"]); drawTreemap(5000, 2000, '#byte_freq', language_bytes, childrenFunction, nameFunction, sizeFunction, colorFunction, color); function drawTreemap(height,width,elementSelector,language_bytes,childrenFunction,nameFunction,sizeFunction,colorFunction,colorScale){ var treemap = d3.layout.treemap() .children(childrenFunction) .size([width,height]) .value(sizeFunction); var div = d3.select(elementSelector) .append(\"div\") .style(\"position\",\"relative\") .style(\"width\",width + \"px\") .style(\"height\",height + \"px\"); div.data(language_bytes).selectAll(\"div\") .data(function(d){return treemap.nodes(d);}) .enter() .append(\"div\") .attr(\"class\",\"cell\") .style(\"background\",function(d){ return colorScale(colorFunction(d));}) .call(cell) .text(nameFunction); } function cell(){ this .style(\"left\",function(d){return d.x + \"px\";}) .style(\"top\",function(d){return d.y + \"px\";}) .style(\"width\",function(d){return d.dx - 1 + \"px\";}) .style(\"height\",function(d){return d.dy - 1 + \"px\";}); } &lt;/script&gt;  Et voila! Beautiful rectangles containing your repo languages, with relative proportions that are easy to see at a glance. You might need to tweak the height and width of your treemap, passed as the first two arguments to drawTreemap above, to get all the information to show up properly."
  },
  
  
  {
    "title": "Traversing with Pagination",
    
    "url": "/guides/traversing-with-pagination/",
    "body": " Traversing with Pagination  Basics of Pagination Consuming the information Constructing Pagination Links  The GitHub API provides a vast wealth of information for developers to consume. Most of the time, you might even find that you're asking for too much information, and in order to keep our servers happy, the API will automatically paginate the requested items. In this guide, we'll make some calls to the GitHub Search API, and iterate over the results using pagination. You can find the complete source code for this project in the platform-samples repository.  Basics of Pagination To start with, it's important to know a few facts about receiving paginated items:  Different API calls respond with different defaults. For example, a call to list GitHub's public repositories provides paginated items in sets of 30, whereas a call to the GitHub Search API provides items in sets of 100 You can specify how many items to receive (up to a maximum of 100); but, For technical reasons, not every endpoint behaves the same. For example, events won't let you set a maximum for items to receive. Be sure to read the documentation on how to handle paginated results for specific endpoints.  Information about pagination is provided in the Link header of an API call. For example, let's make a curl request to the search API, to find out how many times Mozilla projects use the phrase addClass:  curl -I \"https://api.github.com/search/code?q=addClass+user:mozilla\"  The -I parameter indicates that we only care about the headers, not the actual content. In examining the result, you'll notice some information in the Link header that looks like this: Link: &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=2&gt;; rel=\"next\", &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=34&gt;; rel=\"last\"  Let's break that down. rel=\"next\" says that the next page is page=2. This makes sense, since by default, all paginated queries start at page 1. rel=\"last\" provides some more information, stating that the last page of results is on page 34. Thus, we have 33 more pages of information about addClass that we can consume. Nice! Keep in mind that you should always rely on these link relations provided to you. Don't try to guess or construct your own URL. Some API calls, like listing commits on a repository, use pagination results that are based on SHA values, not numbers.  Navigating through the pages Now that you know how many pages there are to receive, you can start navigating through the pages to consume the results. You do this by passing in a page parameter. By default, page always starts at 1. Let's jump ahead to page 14 and see what happens:  curl -I \"https://api.github.com/search/code?q=addClass+user:mozilla&amp;page=14\"  Here's the link header once more: Link: &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=15&gt;; rel=\"next\", &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=34&gt;; rel=\"last\", &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=1&gt;; rel=\"first\", &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;page=13&gt;; rel=\"prev\"  As expected, rel=\"next\" is at 15, and rel=\"last\" is still 34. But now we've got some more information: rel=\"first\" indicates the URL for the first page, and more importantly, rel=\"prev\" lets you know the page number of the previous page. Using this information, you could construct some UI that lets users jump between the first, previous, next, or last list of results in an API call.  Changing the number of items received By passing the per_page parameter, you can specify how many items you want each page to return, up to 100 items. Let's try asking for 50 items about addClass:  curl -I \"https://api.github.com/search/code?q=addClass+user:mozilla&amp;per_page=50\"  Notice what it does to the header response: Link: &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;per_page=50&amp;page=2&gt;; rel=\"next\", &lt;https://api.github.com/search/code?q=addClass+user%3Amozilla&amp;per_page=50&amp;page=20&gt;; rel=\"last\"  As you might have guessed, the rel=\"last\" information says that the last page is now 20. This is because we are asking for more information per page about our results.  Consuming the information You don't want to be making low-level curl calls just to be able to work with pagination, so let's write a little Ruby script that does everything we've just described above. As always, first we'll require GitHub's Octokit.rb Ruby library, and pass in our personal access token: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN']  Next, we'll execute the search, using Octokit's search_code method. Unlike using curl, we can also immediately retrieve the number of results, so let's do that: results = client.search_code('addClass user:mozilla') total_count = results.total_count  Now, let's grab the number of the last page, similar to page=34&gt;; rel=\"last\" information in the link header. Octokit.rb support pagination information through an implementation called \"Hypermedia link relations.\" We won't go into detail about what that is, but, suffice to say, each element in the results variable has a hash called rels, which can contain information about :next, :last, :first, and :prev, depending on which result you're on. These relations also contain information about the resulting URL, by calling rels[:last].href. Knowing this, let's grab the page number of the last result, and present all this information to the user: last_response = client.last_response number_of_pages = last_response.rels[:last].href.match(/page=(\\d+)$/)[1] puts \"There are #{total_count} results, on #{number_of_pages} pages!\"  Finally, let's iterate through the results. You could do this with a loop for i in 1..number_of_pages.to_i, but instead, let's follow the rels[:next] headers to retrieve information from each page. For the sake of simplicity, let's just grab the file path of the first result from each page. To do this, we'll need a loop; and at the end of every loop, we'll retrieve the data set for the next page by following the rels[:next] information. The loop will finish when there is no rels[:next] information to consume (in other words, we are at rels[:last]). It might look something like this: puts last_response.data.items.first.path until last_response.rels[:next].nil? last_response = last_response.rels[:next].get puts last_response.data.items.first.path end  Changing the number of items per page is extremely simple with Octokit.rb. Simply pass a per_page options hash to the initial client construction. After that, your code should remain intact: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN'] results = client.search_code('addClass user:mozilla', :per_page =&gt; 100) total_count = results.total_count last_response = client.last_response number_of_pages = last_response.rels[:last].href.match(/page=(\\d+)$/)[1] puts last_response.rels[:last].href puts \"There are #{total_count} results, on #{number_of_pages} pages!\" puts \"And here's the first path for every set\" puts last_response.data.items.first.path until last_response.rels[:next].nil? last_response = last_response.rels[:next].get puts last_response.data.items.first.path end   Constructing Pagination Links Normally, with pagination, your goal isn't to concatenate all of the possible results, but rather, to produce a set of navigation, like this:  Let's sketch out a micro-version of what that might entail. From the code above, we already know we can get the number_of_pages in the paginated results from the first call: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN'] results = client.search_code('addClass user:mozilla') total_count = results.total_count last_response = client.last_response number_of_pages = last_response.rels[:last].href.match(/page=(\\d+)$/)[1] puts last_response.rels[:last].href puts \"There are #{total_count} results, on #{number_of_pages} pages!\"  From there, we can construct a beautiful ASCII representation of the number boxes: numbers = \"\" for i in 1..number_of_pages.to_i numbers &lt;&lt; \"[#{i}] \" end puts numbers  Let's simulate a user clicking on one of these boxes, by constructing a random number: random_page = Random.new random_page = random_page.rand(1..number_of_pages.to_i) puts \"A User appeared, and clicked number #{random_page}!\"  Now that we have a page number, we can use Octokit to explicitly retrieve that individual page, by passing the :page option: clicked_results = client.search_code('addClass user:mozilla', :page =&gt; random_page)  If we wanted to get fancy, we could also grab the previous and next pages, in order to generate links for back (&lt;&lt;) and foward (&gt;&gt;) elements: prev_page_href = client.last_response.rels[:prev] ? client.last_response.rels[:prev].href : \"(none)\" next_page_href = client.last_response.rels[:next] ? client.last_response.rels[:next].href : \"(none)\" puts \"The prev page link is #{prev_page_href}\" puts \"The next page link is #{next_page_href}\" "
  },
  
  
  {
    "title": "Using SSH Agent Forwarding",
    
    "url": "/guides/using-ssh-agent-forwarding/",
    "body": " Using SSH agent forwarding  Setting up SSH agent forwarding Testing SSH agent forwarding Troubleshooting SSH agent forwarding  SSH agent forwarding can be used to make deploying to a server simple. It allows you to use your local SSH keys instead of leaving keys (without passphrases!) sitting on your server. If you've already set up an SSH key to interact with GitHub, you're probably familiar with ssh-agent. It's a program that runs in the background and keeps your key loaded into memory, so that you don't need to enter your passphrase every time you need to use the key. The nifty thing is, you can choose to let servers access your local ssh-agent as if they were already running on the server. This is sort of like asking a friend to enter their password so that you can use their computer. Check out Steve Friedl's Tech Tips guide for a more detailed explanation of SSH agent forwarding.  Setting up SSH agent forwarding Ensure that your own SSH key is set up and working. You can use our guide on generating SSH keys if you've not done this yet. You can test that your local key works by entering ssh -T git@github.com in the terminal:  ssh -T git@github.com # Attempt to SSH in to github Hi username! You've successfully authenticated, but GitHub does not provide shell access.  We're off to a great start. Let's set up SSH to allow agent forwarding to your server.  Using your favorite text editor, open up the file at ~/.ssh/config. If this file doesn't exist, you can create it by entering touch ~/.ssh/config in the terminal.  Enter the following text into the file, replacing example.com with your server's domain name or IP: Host example.com ForwardAgent yes     Warning: You may be tempted to use a wildcard like Host * to just apply this setting to all SSH connections. That's not really a good idea, as you'd be sharing your local SSH keys with every server you SSH into. They won't have direct access to the keys, but they will be able to use them as you while the connection is established. You should only add servers you trust and that you intend to use with agent forwarding.   Testing SSH agent forwarding To test that agent forwarding is working with your server, you can SSH into your server and run ssh -T git@github.com once more. If all is well, you'll get back the same prompt as you did locally. If you're unsure if your local key is being used, you can also inspect the SSH_AUTH_SOCK variable on your server:  echo \"$SSH_AUTH_SOCK\" # Print out the SSH_AUTH_SOCK variable /tmp/ssh-4hNGMk8AZX/agent.79453  If the variable is not set, it means that agent forwarding is not working:  echo \"$SSH_AUTH_SOCK\" # Print out the SSH_AUTH_SOCK variable [No output] ssh -T git@github.com # Try to SSH to github Permission denied (publickey).   Troubleshooting SSH agent forwarding Here are some things to look out for when troubleshooting SSH agent forwarding.  You must be using an SSH URL to check out code SSH forwarding only works with SSH URLs, not HTTP(s) URLs. Check the .git/config file on your server and ensure the URL is an SSH-style URL like below:  [remote \"origin\"] url = git@github.com:yourAccount/yourProject.git fetch = +refs/heads/*:refs/remotes/origin/*   Your SSH keys must work locally Before you can make your keys work through agent forwarding, they must work locally first. Our guide on generating SSH keys can help you set up your SSH keys locally.  Your system must allow SSH agent forwarding Sometimes, system configurations disallow SSH agent forwarding. You can check if a system configuration file is being used by entering the following command in the terminal:  ssh -v example.com # Connect to example.com with verbose debug output OpenSSH_5.6p1, OpenSSL 0.9.8r 8 Feb 2011 debug1: Reading configuration data /Users/you/.ssh/config debug1: Applying options for example.com debug1: Reading configuration data /etc/ssh_config debug1: Applying options for * exit # Returns to your local command prompt  In the example above, the file ~/.ssh/config is loaded first, then /etc/ssh_config is read. We can inspect that file to see if it's overriding our options by running the following commands:  cat /etc/ssh_config # Print out the /etc/ssh_config file Host *  SendEnv LANG LC_*  ForwardAgent no  In this example, our /etc/ssh_config file specifically says ForwardAgent no, which is a way to block agent forwarding. Deleting this line from the file should get agent forwarding working once more.  Your server must allow SSH agent forwarding on inbound connections Agent forwarding may also be blocked on your server. You can check that agent forwarding is permitted by SSHing into the server and running sshd_config. The output from this command should indicate that AllowAgentForwarding is set.  Your local ssh-agent must be running On most computers, the operating system automatically launches ssh-agent for you. On Windows, however, you need to do this manually. We have a guide on how to start ssh-agent whenever you open Git Bash. To verify that ssh-agent is running on your computer, type the following command in the terminal:  echo \"$SSH_AUTH_SOCK\" # Print out the SSH_AUTH_SOCK variable /tmp/launch-kNSlgU/Listeners   Your key must be available to ssh-agent  You can check that your key is visible to ssh-agent by running the following command:  ssh-add -L  If the command says that no identity is available, you'll need to add your key:  ssh-add yourkey   On Mac OS X, ssh-agent will \"forget\" this key, once it gets restarted during reboots. But you can import your SSH keys into Keychain using this command:  /usr/bin/ssh-add -K yourkey  "
  },
  
  
  {
    "title": "Working with Comments",
    
    "url": "/guides/working-with-comments/",
    "body": " Working with Comments  Pull Request Comments Pull Request Comments on a Line Commit Comments  For any Pull Request, GitHub provides three kinds of comment views: comments on the Pull Request as a whole, comments on a specific line within the Pull Request, and comments on a specific commit within the Pull Request. Each of these types of comments goes through a different portion of the GitHub API. In this guide, we'll explore how you can access and manipulate each one. For every example, we'll be using this sample Pull Request made on the \"octocat\" repository. As always, samples can be found in our platform-samples repository.  Pull Request Comments To access comments on a Pull Request, you'll go through the Issues API. This may seem counterintuitive at first. But once you understand that a Pull Request is just an Issue with code, it makes sense to use the Issues API to create comments on a Pull Request. We'll demonstrate fetching Pull Request comments by creating a Ruby script using Octokit.rb. You'll also want to create a personal access token. The following code should help you get started accessing comments from a Pull Request using Octokit.rb: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN'] client.issue_comments(\"octocat/Spoon-Knife\", 1176).each do |comment| username = comment[:user][:login] post_date = comment[:created_at] content = comment[:body] puts \"#{username} made a comment on #{post_date}. It says:\\n'#{content}'\\n\" end  Here, we're specifically calling out to the Issues API to get the comments (issue_comments), providing both the repository's name (octocat/Spoon-Knife), and the Pull Request ID we're interested in (1176). After that, it's simply a matter of iterating through the comments to fetch information about each one.  Pull Request Comments on a Line Within the diff view, you can start a discussion on a particular aspect of a singular change made within the Pull Request. These comments occur on the individual lines within a changed file. The endpoint URL for this discussion comes from the Pull Request Review API. The following code fetches all the Pull Request comments made on files, given a single Pull Request number: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN'] client.pull_request_comments(\"octocat/Spoon-Knife\", 1176).each do |comment| username = comment[:user][:login] post_date = comment[:created_at] content = comment[:body] path = comment[:path] position = comment[:position] puts \"#{username} made a comment on #{post_date} for the file called #{path}, on line #{position}. It says:\\n'#{content}'\\n\" end  You'll notice that it's incredibly similar to the example above. The difference between this view and the Pull Request comment is the focus of the conversation. A comment made on a Pull Request should be reserved for discussion or ideas on the overall direction of the code. A comment made as part of a Pull Request review should deal specifically with the way a particular change was implemented within a file.  Commit Comments The last type of comments occur specifically on individual commits. For this reason, they make use of the commit comment API. To retrieve the comments on a commit, you'll want to use the SHA1 of the commit. In other words, you won't use any identifier related to the Pull Request. Here's an example: require 'octokit' # !!! DO NOT EVER USE HARD-CODED VALUES IN A REAL APP !!! # Instead, set and test environment variables, like below client = Octokit::Client.new :access_token =&gt; ENV['MY_PERSONAL_TOKEN'] client.commit_comments(\"octocat/Spoon-Knife\", \"cbc28e7c8caee26febc8c013b0adfb97a4edd96e\").each do |comment| username = comment[:user][:login] post_date = comment[:created_at] content = comment[:body] puts \"#{username} made a comment on #{post_date}. It says:\\n'#{content}'\\n\" end  Note that this API call will retrieve single line comments, as well as comments made on the entire commit."
  },
  
  
  {
    "title": "GitHub Developer",
    
    "url": "/index/",
    "body": "   Leverage the power of PerfectGym in your app.  Get started with one of our guides, or jump straight into the API documentation. Browse the documentation  "
  },
  
  
  
  
  
  
  
  
  
  
  
  {}
]
